{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/pages/Dashboard/Dashboard/Overview.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/pages/Dashboard/Dashboard/Overview.vue","mtime":1623073973956},{"path":"/home/amos/Bureau/VSDR_site/node_modules/css-loader/dist/cjs.js","mtime":1622616466311},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1622616466449},{"path":"/home/amos/Bureau/VSDR_site/node_modules/postcss-loader/src/index.js","mtime":1622616466430},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpZ2h0VGV4dCB7CiAgY29sb3I6IGRhcmtncmV5Owp9Cg=="},{"version":3,"sources":["Overview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA","file":"Overview.vue","sourceRoot":"src/pages/Dashboard/Dashboard","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\"  v-for=\"sensor in mySensorList.filter(s=> (s.project.toLowerCase() === project.toLowerCase() && s.type === 'Fontaine'))\">\n        <fountains-valve-card :location=\"sensor.location\"></fountains-valve-card> <!--Add the operating times-->  \n      </div>\n      \n    </div>\n  </div>\n</template>\n\n\n<script>\nimport FountainsValveCard from '../../../components/FountainsValveCard.vue'\n   export default {\n  components: { FountainsValveCard },\n    name: \"Overview\",\n    \n    \n        \n    data() {\n      return {\n        locationName: this.$route.name,             //route of the page\n        project : this.$PROJECT,\n        mySensorList : this.$SENSORSLISTJSON\n\n\n      }\n    },\n    mounted() {\n    },\n    watch: {\n      '$route.route': {                               //watch if the route has changed (this is how i now that i've changed page)\n        handler: function () {                        //if the route changed, reload data\n          this.locationName = this.$route.name\n          \n         \n          \n        },\n        deep: true,\n        immediate: true\n      }\n    },\n\n\n    methods: {\n\n\n     \n    }\n\n\n   }\n\n</script>\n\n<style>\n  .lightText {\n    color: darkgrey;\n  }\n</style>\n"]}]}