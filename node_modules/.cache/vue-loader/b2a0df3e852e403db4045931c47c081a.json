{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/components/TemperatureChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/components/TemperatureChart.vue","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmNvbnN0IGFsZXJ0VGVtcGVyYXR1cmUgPSAzOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsKICAgICdkYXRhVGVtcGVyYXR1cmVDaGFydCcsCiAgXSwKCiAgZGF0YSgpIHsKICAgIHRoaXMuJHNldFJlZlRlbXBDaGFydCgpCiAgICByZXR1cm4gewogICAgICBzdG9ja09wdGlvbnM6IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIiIKICAgICAgICB9LAogICAgICAgIHRpbWU6IHsKICAgICAgICAgIHRpbWV6b25lT2Zmc2V0OiAtNjAsCiAgICAgICAgfSwKCiAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdSb2JvdG8nCiAgICAgICAgICB9LAogICAgICAgIH0sCgogICAgICAgIHNjcm9sbGJhcjogewogICAgICAgICAgYmFyQmFja2dyb3VuZENvbG9yOiAnI2NjY2NjYycsCiAgICAgICAgICBiYXJCb3JkZXJSYWRpdXM6IDcsCiAgICAgICAgICBiYXJCb3JkZXJXaWR0aDogMCwKICAgICAgICAgIGJ1dHRvbkJhY2tncm91bmRDb2xvcjogJyNjY2NjY2MnLAogICAgICAgICAgYnV0dG9uQm9yZGVyV2lkdGg6IDAsCiAgICAgICAgICBidXR0b25Cb3JkZXJSYWRpdXM6IDcsCiAgICAgICAgICB0cmFja0JhY2tncm91bmRDb2xvcjogJ25vbmUnLAogICAgICAgICAgdHJhY2tCb3JkZXJXaWR0aDogMSwKICAgICAgICAgIHRyYWNrQm9yZGVyUmFkaXVzOiA4LAogICAgICAgICAgdHJhY2tCb3JkZXJDb2xvcjogJyNDQ0MnCiAgICAgICAgfSwKCiAgICAgICAgLy8geEF4aXM6IHsKICAgICAgICAvLyAgIHBsb3RCYW5kczogcGxvdEJhbmRzCiAgICAgICAgLy8gfSwKCiAgICAgICAgeUF4aXM6IFt7IC8vIFByaW1hcnkgeUF4aXMKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIC8vIHRleHQ6ICdUZW1ww6lyYXR1cmUgZHUgc29sJywKICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyM0Mjg1ZjQnCiAgICAgICAgICAgIH0sCgogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICBmb3JtYXQ6ICd7dmFsdWV9IMKwQycsCiAgICAgICAgICB9LAoKICAgICAgICAgIHNvZnRNaW4gOiB0aGlzLiRyZWZNaW5UZW1wVmFsdWUsCiAgICAgICAgICBzb2Z0TWF4IDogdGhpcy4kcmVmTWF4VGVtcFZhbHVlLAoKICAgICAgICAgIG9wcG9zaXRlOiB0cnVlLAogICAgICAgICAgcGxvdExpbmVzOiBbewogICAgICAgICAgICB2YWx1ZTogYWxlcnRUZW1wZXJhdHVyZSwKICAgICAgICAgICAgY29sb3I6ICdwYWxldmlvbGV0cmVkJywKICAgICAgICAgICAgZGFzaFN0eWxlOiAnbG9uZ2Rhc2gnLAogICAgICAgICAgICB3aWR0aDogMS4zLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHRleHQ6ICdOaXZlYXUgYWxlcnRlIGdlbCcsCiAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnZ3JheScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCgogICAgICAgIH0sIHsgLy8gU2Vjb25kYXJ5IHlBeGlzCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAvLyB0ZXh0OiAnVGVtcMOpcmF0dXJlIGR1IGNhcHRldXInLAogICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2Y0YjQwMCcKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbHM6IHsKICAgICAgICAgICAgZm9ybWF0OiAne3ZhbHVlfSDCsEMnLAogICAgICAgICAgfSwKCiAgICAgICAgICBvcHBvc2l0ZTogdHJ1ZQogICAgICAgIH1dLAoKICAgICAgICByYW5nZVNlbGVjdG9yOiB7CiAgICAgICAgICBzZWxlY3RlZDogJ2FsbCcsCiAgICAgICAgICBidXR0b25zOiBbewogICAgICAgICAgICB0eXBlOiAnaG91cicsCiAgICAgICAgICAgIGNvdW50OiAxMiwKICAgICAgICAgICAgdGV4dDogJzEyIGgnLAogICAgICAgICAgICAvL2NvdWxkIGJlIHBlcmhhcHMgdXNlZCB0byBzZXQgdGhlIGdyb3VwIGJ5CiAgICAgICAgICAgIC8vZXZlbnRzOnsKICAgICAgICAgICAgLy8gIGNsaWNrIDogZnVuY3Rpb24oKXsKICAgICAgICAgICAgLy8gICAgYWxlcnQoJzEyIGggY2xpY2tlZCcpCiAgICAgICAgICAgIC8vICB9CiAgICAgICAgICAgIC8vfQogICAgICAgICAgfSwgewogICAgICAgICAgICB0eXBlOiAnaG91cicsCiAgICAgICAgICAgIGNvdW50OiAyNCwKICAgICAgICAgICAgdGV4dDogJzI0IGgnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHR5cGU6ICdkYXknLAogICAgICAgICAgICBjb3VudDogNywKICAgICAgICAgICAgdGV4dDogJzcgaicKICAgICAgICB9LC8qIHsKICAgICAgICAgIHR5cGU6ICdtb250aCcsCiAgICAgICAgICBjb3VudDogMywKICAgICAgICAgIHRleHQ6ICczbScKICAgICAgICB9LCB7CiAgICAgICAgICAgIHR5cGU6ICdhbGwnLAogICAgICAgICAgICB0ZXh0OiAnVG91cyd9Ki8KICAgICAgICAgIF0KICAgICAgICB9LAoKICAgICAgICBzZXJpZXM6IHRoaXMuZGF0YVRlbXBlcmF0dXJlQ2hhcnQsCgogICAgICAgIG5hdmlnYXRvcjogewogICAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgICB9LAoKCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgbGF5b3V0OiAnaG9yaXpvbnRhbCcsCiAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICB4OiAwLAogICAgICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsCiAgICAgICAgICB5OiAwLAogICAgICAgICAgZmxvYXRpbmc6IHRydWUsCiAgICAgICAgfSwKICAgICAgICBleHBvcnRpbmc6IHsKICAgICAgICAgIGVuYWJsZWQ6dHJ1ZSwKICAgICAgICAgIGJ1dHRvbnM6IHsKICAgICAgICAgICAgZXhwb3J0QnV0dG9uOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKCgogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICB4RGF0ZUZvcm1hdDogJyVZLSVtLSVkJywKICAgICAgICAgIGNyb3NzaGFpcnM6IHRydWUsCiAgICAgICAgICBzaGFyZWQ6IHRydWUsCiAgICAgICAgICBzcGxpdCA6IHRydWUsCiAgICAgICAgICBoaWRlRGVsYXkgOiA1MCwKICAgICAgICAgIHBvaW50Rm9ybWF0OiAne3Nlcmllcy5uYW1lfTogPGI+e3BvaW50Lnk6LjFmfcKwQzwvYj4nLAogICAgICAgIH0sCiAgICAgIH0KICAgIH0KICB9LAoKICB3YXRjaDogewogICAgZGF0YVRlbXBlcmF0dXJlQ2hhcnQobmV3VmFsdWUpIHsKCiAgICAgIHRoaXMuc3RvY2tPcHRpb25zLnNlcmllcyA9IG5ld1ZhbHVlCiAgICB9LAoKICB9Cn0K"},{"version":3,"sources":["TemperatureChart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA","file":"TemperatureChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <highcharts class=\"stock\" :constructor-type=\"'stockChart'\" :options=\"stockOptions\" id=\"temperaturechart\"></highcharts>\n</template>\n\n<script>\n  const alertTemperature = 3;\n  export default {\n    props: [\n      'dataTemperatureChart',\n    ],\n\n    data() {\n      this.$setRefTempChart()\n      return {\n        stockOptions: {\n          title: {\n            text: \"\"\n          },\n          time: {\n            timezoneOffset: -60,\n          },\n\n          chart: {\n            style: {\n              fontFamily: 'Roboto'\n            },\n          },\n\n          scrollbar: {\n            barBackgroundColor: '#cccccc',\n            barBorderRadius: 7,\n            barBorderWidth: 0,\n            buttonBackgroundColor: '#cccccc',\n            buttonBorderWidth: 0,\n            buttonBorderRadius: 7,\n            trackBackgroundColor: 'none',\n            trackBorderWidth: 1,\n            trackBorderRadius: 8,\n            trackBorderColor: '#CCC'\n          },\n\n          // xAxis: {\n          //   plotBands: plotBands\n          // },\n\n          yAxis: [{ // Primary yAxis\n            title: {\n              // text: 'Température du sol',\n              style: {\n                color: '#4285f4'\n              },\n\n            },\n            labels: {\n              format: '{value} °C',\n            },\n\n            softMin : this.$refMinTempValue,\n            softMax : this.$refMaxTempValue,\n\n            opposite: true,\n            plotLines: [{\n              value: alertTemperature,\n              color: 'palevioletred',\n              dashStyle: 'longdash',\n              width: 1.3,\n              label: {\n                text: 'Niveau alerte gel',\n                style: {\n                  color: 'gray'\n                }\n              }\n            }]\n\n          }, { // Secondary yAxis\n            title: {\n              // text: 'Température du capteur',\n              style: {\n                color: '#f4b400'\n              },\n            },\n            labels: {\n              format: '{value} °C',\n            },\n\n            opposite: true\n          }],\n\n          rangeSelector: {\n            selected: 'all',\n            buttons: [{\n              type: 'hour',\n              count: 12,\n              text: '12 h',\n              //could be perhaps used to set the group by\n              //events:{\n              //  click : function(){\n              //    alert('12 h clicked')\n              //  }\n              //}\n            }, {\n              type: 'hour',\n              count: 24,\n              text: '24 h'\n            }, {\n              type: 'day',\n              count: 7,\n              text: '7 j'\n          },/* {\n            type: 'month',\n            count: 3,\n            text: '3m'\n          }, {\n              type: 'all',\n              text: 'Tous'}*/\n            ]\n          },\n\n          series: this.dataTemperatureChart,\n\n          navigator: {\n            enabled: false\n          },\n\n\n          legend: {\n            enabled: true,\n            layout: 'horizontal',\n            align: 'center',\n            x: 0,\n            verticalAlign: 'top',\n            y: 0,\n            floating: true,\n          },\n          exporting: {\n            enabled:true,\n            buttons: {\n              exportButton: {\n                enabled: true\n              }\n            }\n          },\n\n\n          tooltip: {\n            enabled: true,\n            xDateFormat: '%Y-%m-%d',\n            crosshairs: true,\n            shared: true,\n            split : true,\n            hideDelay : 50,\n            pointFormat: '{series.name}: <b>{point.y:.1f}°C</b>',\n          },\n        }\n      }\n    },\n\n    watch: {\n      dataTemperatureChart(newValue) {\n\n        this.stockOptions.series = newValue\n      },\n\n    }\n  }\n</script>\n<style scoped>\n  .stock {\n    width: auto; /*auto*/\n  }\n</style>\n"]}]}