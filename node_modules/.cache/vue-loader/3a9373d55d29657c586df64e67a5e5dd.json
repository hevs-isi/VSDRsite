{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/components/TemperatureChart.vue?vue&type=style&index=0&id=a7e0040c&scoped=true&lang=css&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/components/TemperatureChart.vue","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/css-loader/dist/cjs.js","mtime":1622616466311},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1622616466449},{"path":"/home/amos/Bureau/VSDR_site/node_modules/postcss-loader/src/index.js","mtime":1622616466430},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3RvY2sgewogIHdpZHRoOiBhdXRvOyAvKmF1dG8qLwp9Cg=="},{"version":3,"sources":["TemperatureChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA","file":"TemperatureChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <highcharts class=\"stock\" :constructor-type=\"'stockChart'\" :options=\"stockOptions\" id=\"temperaturechart\"></highcharts>\n</template>\n\n<script>\n  const alertTemperature = 3;\n  export default {\n    props: [\n      'dataTemperatureChart',\n    ],\n\n    data() {\n      this.$setRefTempChart()\n      return {\n        stockOptions: {\n          title: {\n            text: \"\"\n          },\n          time: {\n            timezoneOffset: -60,\n          },\n\n          chart: {\n            style: {\n              fontFamily: 'Roboto'\n            },\n          },\n\n          scrollbar: {\n            barBackgroundColor: '#cccccc',\n            barBorderRadius: 7,\n            barBorderWidth: 0,\n            buttonBackgroundColor: '#cccccc',\n            buttonBorderWidth: 0,\n            buttonBorderRadius: 7,\n            trackBackgroundColor: 'none',\n            trackBorderWidth: 1,\n            trackBorderRadius: 8,\n            trackBorderColor: '#CCC'\n          },\n\n          // xAxis: {\n          //   plotBands: plotBands\n          // },\n\n          yAxis: [{ // Primary yAxis\n            title: {\n              // text: 'Température du sol',\n              style: {\n                color: '#4285f4'\n              },\n\n            },\n            labels: {\n              format: '{value} °C',\n            },\n\n            softMin : this.$refMinTempValue,\n            softMax : this.$refMaxTempValue,\n\n            opposite: true,\n            plotLines: [{\n              value: alertTemperature,\n              color: 'palevioletred',\n              dashStyle: 'longdash',\n              width: 1.3,\n              label: {\n                text: 'Niveau alerte gel',\n                style: {\n                  color: 'gray'\n                }\n              }\n            }]\n\n          }, { // Secondary yAxis\n            title: {\n              // text: 'Température du capteur',\n              style: {\n                color: '#f4b400'\n              },\n            },\n            labels: {\n              format: '{value} °C',\n            },\n\n            opposite: true\n          }],\n\n          rangeSelector: {\n            selected: 'all',\n            buttons: [{\n              type: 'hour',\n              count: 12,\n              text: '12 h',\n              //could be perhaps used to set the group by\n              //events:{\n              //  click : function(){\n              //    alert('12 h clicked')\n              //  }\n              //}\n            }, {\n              type: 'hour',\n              count: 24,\n              text: '24 h'\n            }, {\n              type: 'day',\n              count: 7,\n              text: '7 j'\n          },/* {\n            type: 'month',\n            count: 3,\n            text: '3m'\n          }, {\n              type: 'all',\n              text: 'Tous'}*/\n            ]\n          },\n\n          series: this.dataTemperatureChart,\n\n          navigator: {\n            enabled: false\n          },\n\n\n          legend: {\n            enabled: true,\n            layout: 'horizontal',\n            align: 'center',\n            x: 0,\n            verticalAlign: 'top',\n            y: 0,\n            floating: true,\n          },\n          exporting: {\n            enabled:true,\n            buttons: {\n              exportButton: {\n                enabled: true\n              }\n            }\n          },\n\n\n          tooltip: {\n            enabled: true,\n            xDateFormat: '%Y-%m-%d',\n            crosshairs: true,\n            shared: true,\n            split : true,\n            hideDelay : 50,\n            pointFormat: '{series.name}: <b>{point.y:.1f}°C</b>',\n          },\n        }\n      }\n    },\n\n    watch: {\n      dataTemperatureChart(newValue) {\n\n        this.stockOptions.series = newValue\n      },\n\n    }\n  }\n</script>\n<style scoped>\n  .stock {\n    width: auto; /*auto*/\n  }\n</style>\n"]}]}