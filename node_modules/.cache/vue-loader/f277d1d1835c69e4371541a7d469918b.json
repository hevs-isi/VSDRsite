{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/components/TemperatureChartGlobal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/components/TemperatureChartGlobal.vue","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCiBjb25zdCBhbGVydFRlbXBlcmF0dXJlID0gMTsKCiBEYXRlLnByb3RvdHlwZS5tb3JuaW5nID0gZnVuY3Rpb24oKXsKICAgbGV0IG5ld0RhdGUgPSBuZXcgRGF0ZSh0aGlzLmdldFRpbWUoKSkKICAgbmV3RGF0ZS5zZXRIb3VycygwKzcpCiAgIG5ld0RhdGUuc2V0TWludXRlcygwKQogICByZXR1cm4gbmV3RGF0ZTsKIH0KCiBEYXRlLnByb3RvdHlwZS5ldmVuaW5nID0gZnVuY3Rpb24oKXsKICAgbGV0IG5ld0RhdGUgPSBuZXcgRGF0ZSh0aGlzLmdldFRpbWUoKSkKICAgbmV3RGF0ZS5zZXRIb3VycygwKzE5KQogICBuZXdEYXRlLnNldE1pbnV0ZXMoMCkKICAgcmV0dXJuIG5ld0RhdGU7CiB9CgogLy8gQ29tcHV0ZSBzb21lIGltcG9ydGFudCBkYXRlcwogbGV0IG5vdyA9IG5ldyBEYXRlKCkKIGxldCB5ZXN0ZXJkYXkgPSBuZXcgRGF0ZShub3cpCiB5ZXN0ZXJkYXkuc2V0RGF0ZSh5ZXN0ZXJkYXkuZ2V0RGF0ZSgpIC0gMSkKIGxldCB0b21vcnJvdyA9IG5ldyBEYXRlKG5vdykKIHRvbW9ycm93LnNldERhdGUodG9tb3Jyb3cuZ2V0RGF0ZSgpICsgMSkKCgogZXhwb3J0IGRlZmF1bHQgewogICBwcm9wczogWwogICAgICdkYXRhVGVtcGVyYXR1cmVHbG9iYWxDaGFydCcKICAgXSwKICAgZGF0YSgpIHsKICAgICB0aGlzLiRzZXRSZWZUZW1wQ2hhcnQoKQoKICAgICByZXR1cm4gewogICAgICAgc3RvY2tPcHRpb25zOiB7CiAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgdGV4dDogIiIKICAgICAgICAgfSwKICAgICAgICAgdGltZTogewogICAgICAgICAgIHRpbWV6b25lT2Zmc2V0OiAtNjAsIC8vLTEyMAoKICAgICAgICAgfSwKCiAgICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdSb2JvdG8nLAogICAgICAgICAgIH0sCiAgICAgICAgICAgaGVpZ2h0OiA0MDAsCiAgICAgICAgIH0sCgogICAgICAgICBib29zdDogewogICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICAgfSwKCiAgICAgICAgIHNlcmllczogdGhpcy5kYXRhVGVtcGVyYXR1cmVHbG9iYWxDaGFydCwKCgogICAgICAgICAvLyBMYSBiYXJyZSBhdSBmb25kIHBvdXIgbCdhcGVyw6d1CiAgICAgICAgIG5hdmlnYXRvcjogewogICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLCBoYW5kbGVzOiB7CiAgICAgICAgICAgICBlbmFibGU6IGZhbHNlCiAgICAgICAgICAgfQogICAgICAgICB9LAoKICAgICAgICAgLy8gTGEgYmFycmUgZGUgc2Nyb2xsCiAgICAgICAgIHNjcm9sbGJhcjogewogICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgIH0sCgogICAgICAgICAvLyBQb3VyIGNob2lzaXIgbGVzIGRhdGVzCiAgICAgICAgIHJhbmdlU2VsZWN0b3I6IHsKICAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgICB9LAoKICAgICAgICAgLy8gc2Nyb2xsYmFyOiB7CiAgICAgICAgIC8vICAgICBiYXJCYWNrZ3JvdW5kQ29sb3I6ICcjY2NjY2NjJywKICAgICAgICAgLy8gICAgIC8vYmFyQm9yZGVyUmFkaXVzOiA3LAogICAgICAgICAvLyAgICAgLy9iYXJCb3JkZXJXaWR0aDogMCwKICAgICAgICAgLy8gICAgIC8vYnV0dG9uQmFja2dyb3VuZENvbG9yOiAnI2NjY2NjYycsCiAgICAgICAgIC8vICAgICBidXR0b25Cb3JkZXJXaWR0aDogMCwKICAgICAgICAgLy8gICAgIGJ1dHRvbkJvcmRlclJhZGl1czogNywKICAgICAgICAgLy8gICAgIHRyYWNrQmFja2dyb3VuZENvbG9yOiAnbm9uZScsCiAgICAgICAgIC8vICAgICB0cmFja0JvcmRlcldpZHRoOiAxLAogICAgICAgICAvLyAgICAgdHJhY2tCb3JkZXJSYWRpdXM6IDgsCiAgICAgICAgIC8vICAgICB0cmFja0JvcmRlckNvbG9yOiAnI0NDQycKICAgICAgICAgLy8gfSwKICAgICAgICAgLy8KCiAgICAgICAgIC8vIFRPRE8gVGhpcyBpcyBub3Qgb3ZlciwgY2hlY2sgd2l0aCB0aGlzIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ3MzE0NDQ4L2ZpbGxpbmcteGF4aXMtZm9yLWFsbC1uaWdodHMtaW4taGlnaGNoYXJ0cwogICAgICAgICB4QXhpczogewogICAgICAgICAgcGxvdEJhbmRzOiBbCiAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgIGNvbG9yOiAnZ2hvc3R3aGl0ZScsIC8vIENvbG9yIHZhbHVlCiAgICAgICAgICAgICAgIGZyb206IHllc3RlcmRheS5ldmVuaW5nKCksCiAgICAgICAgICAgICAgIHRvOiBub3cubW9ybmluZygpLAogICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgIHRleHQ6ICdcdUQ4M0NcdURGMTknLAogICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzE2cHgnCiAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICAgICAgICAgeTogMjUsCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgIGNvbG9yOiAnZ2hvc3R3aGl0ZScsIC8vIENvbG9yIHZhbHVlCiAgICAgICAgICAgICAgIGZyb206IG5vdy5ldmVuaW5nKCksCiAgICAgICAgICAgICAgIHRvOiB0b21vcnJvdy5tb3JuaW5nKCksCiAgICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICAgdGV4dDogJ1x1RDgzQ1x1REYxOScsCiAgICAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTZweCcKICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICAgICAgICAgICB5OiAyNQogICAgICAgICAgICAgICB9CiAgICAgICAgICAgICB9LAogICAgICAgICAgIF0sCiAgICAgICAgIH0sCgogICAgICAgICB5QXhpczogW3sgLy8gUHJpbWFyeSB5QXhpcwogICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICBjb2xvcjogJyM0Mjg1ZjQnCiAgICAgICAgICAgICB9LAogICAgICAgICAgIH0KICAgICAgICAgICAsCgogICAgICAgICAgIHNvZnRNaW4gOiB0aGlzLiRyZWZNaW5UZW1wVmFsdWUsCiAgICAgICAgICAgc29mdE1heCA6IHRoaXMuJHJlZk1heFRlbXBWYWx1ZSwKCiAgICAgICAgICAgLy8gZ3JpZExpbmVDb2xvcjogJyMwMDAwMDAnLAogICAgICAgICAgIC8vIGdyaWRaSW5kZXg6IDAsCgogICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICAgZm9ybWF0OiAne3ZhbHVlfSDCsEMnLAogICAgICAgICAgIH0sCgogICAgICAgICAgIG9wcG9zaXRlOiBmYWxzZSwKCiAgICAgICAgICAgcGxvdExpbmVzOiBbewogICAgICAgICAgICAgdmFsdWU6IGFsZXJ0VGVtcGVyYXR1cmUsCiAgICAgICAgICAgICBjb2xvcjogJ3BhbGV2aW9sZXRyZWQnLAogICAgICAgICAgICAgZGFzaFN0eWxlOiAnbG9uZ2Rhc2gnLAogICAgICAgICAgICAgd2lkdGg6IDEuMywKICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgIHRleHQ6ICdOaXZlYXUgYWxlcnRlIGdlbCcsCiAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgY29sb3I6ICdncmF5JwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgICB9CiAgICAgICAgICAgfV0KCiAgICAgICAgIH0sIHsgLy8gU2Vjb25kYXJ5IHlBeGlzCiAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgIC8vIHRleHQ6ICdQcmFsYW4nLAogICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgY29sb3I6ICcjZjRiNDAwJwogICAgICAgICAgICAgfSwKICAgICAgICAgICB9LAogICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICAgZm9ybWF0OiAne3ZhbHVlfSDCsEMnLAogICAgICAgICAgIH0sCgogICAgICAgICAgIG9wcG9zaXRlOiB0cnVlCiAgICAgICAgIH0sIHsgLy8gdGhpcmQgeUF4aXMKICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgLy8gdGV4dDogJ1BybyBkZSBTYXZpb3onLAogICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgY29sb3I6ICcjMDA2NjAwJwogICAgICAgICAgICAgfSwKICAgICAgICAgICB9LAogICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICAgZm9ybWF0OiAne3ZhbHVlfSDCsEMnLAogICAgICAgICAgIH0sCgogICAgICAgICAgIG9wcG9zaXRlOiB0cnVlCiAgICAgICAgIH1dLAoKICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICBsYXlvdXQ6ICdob3Jpem9udGFsJywKICAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICAgeDogMCwKICAgICAgICAgICB2ZXJ0aWNhbEFsaWduOiAndG9wJywKICAgICAgICAgICB5OiAwLAogICAgICAgICAgIGZsb2F0aW5nOiB0cnVlLAogICAgICAgICB9LAoKICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCi8vICAgICAgICAgICB4RGF0ZUZvcm1hdDogJyVZLSVtLSVkJywKICAgICAgICAgICBjcm9zc2hhaXJzOiB0cnVlLAogICAgICAgICAgIHNoYXJlZDogZmFsc2UsCiAgICAgICAgICAgc3BsaXQgOiBmYWxzZSwKICAgICAgICAgICBoaWRlRGVsYXkgOiA1MCwKICAgICAgICAgICBwb2ludEZvcm1hdDogJ3tzZXJpZXMubmFtZX06IDxiPntwb2ludC55Oi4xZn3CsEM8L2I+JywKICAgICAgICAgfQoKICAgICAgIH0KICAgICB9CiAgIH0sCgogICB3YXRjaDogewogICAgIGRhdGFUZW1wZXJhdHVyZUdsb2JhbENoYXJ0KG5ld1ZhbHVlKSB7CiAgICAgICB0aGlzLnN0b2NrT3B0aW9ucy5zZXJpZXMgPSBuZXdWYWx1ZQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLm1pblZhbHVlKQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLm1heFZhbHVlKQogICAgIH0sCiAgIH0KIH0K"},{"version":3,"sources":["TemperatureChartGlobal.vue"],"names":[],"mappings":";;;;;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TemperatureChartGlobal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <highcharts class=\"stock\" :constructor-type=\"'stockChart'\" :options=\"stockOptions\"\n              id=\"dataTemperatureGlobalChart\"></highcharts>\n</template>\n\n<script>\n  const alertTemperature = 1;\n\n  Date.prototype.morning = function(){\n    let newDate = new Date(this.getTime())\n    newDate.setHours(0+7)\n    newDate.setMinutes(0)\n    return newDate;\n  }\n\n  Date.prototype.evening = function(){\n    let newDate = new Date(this.getTime())\n    newDate.setHours(0+19)\n    newDate.setMinutes(0)\n    return newDate;\n  }\n\n  // Compute some important dates\n  let now = new Date()\n  let yesterday = new Date(now)\n  yesterday.setDate(yesterday.getDate() - 1)\n  let tomorrow = new Date(now)\n  tomorrow.setDate(tomorrow.getDate() + 1)\n\n\n  export default {\n    props: [\n      'dataTemperatureGlobalChart'\n    ],\n    data() {\n      this.$setRefTempChart()\n\n      return {\n        stockOptions: {\n          title: {\n            text: \"\"\n          },\n          time: {\n            timezoneOffset: -60, //-120\n\n          },\n\n          chart: {\n            style: {\n              fontFamily: 'Roboto',\n            },\n            height: 400,\n          },\n\n          boost: {\n            enabled: true\n          },\n\n          series: this.dataTemperatureGlobalChart,\n\n\n          // La barre au fond pour l'aper√ßu\n          navigator: {\n            enabled: false, handles: {\n              enable: false\n            }\n          },\n\n          // La barre de scroll\n          scrollbar: {\n            enabled: false\n          },\n\n          // Pour choisir les dates\n          rangeSelector: {\n            enabled: false\n          },\n\n          // scrollbar: {\n          //     barBackgroundColor: '#cccccc',\n          //     //barBorderRadius: 7,\n          //     //barBorderWidth: 0,\n          //     //buttonBackgroundColor: '#cccccc',\n          //     buttonBorderWidth: 0,\n          //     buttonBorderRadius: 7,\n          //     trackBackgroundColor: 'none',\n          //     trackBorderWidth: 1,\n          //     trackBorderRadius: 8,\n          //     trackBorderColor: '#CCC'\n          // },\n          //\n\n          // TODO This is not over, check with this https://stackoverflow.com/questions/47314448/filling-xaxis-for-all-nights-in-highcharts\n          xAxis: {\n           plotBands: [\n              {\n                color: 'ghostwhite', // Color value\n                from: yesterday.evening(),\n                to: now.morning(),\n                label: {\n                  text: '\\uD83C\\uDF19',\n                  style: {\n                    fontSize: '16px'\n                  },\n                  align: 'center',\n                  y: 25,\n                }\n              },\n              {\n                color: 'ghostwhite', // Color value\n                from: now.evening(),\n                to: tomorrow.morning(),\n                label: {\n                  text: '\\uD83C\\uDF19',\n                  style: {\n                    fontSize: '16px'\n                  },\n                  align: 'center',\n                  y: 25\n                }\n              },\n            ],\n          },\n\n          yAxis: [{ // Primary yAxis\n            title: {\n              style: {\n                color: '#4285f4'\n              },\n            }\n            ,\n\n            softMin : this.$refMinTempValue,\n            softMax : this.$refMaxTempValue,\n\n            // gridLineColor: '#000000',\n            // gridZIndex: 0,\n\n            labels: {\n              format: '{value} ¬∞C',\n            },\n\n            opposite: false,\n\n            plotLines: [{\n              value: alertTemperature,\n              color: 'palevioletred',\n              dashStyle: 'longdash',\n              width: 1.3,\n              label: {\n                text: 'Niveau alerte gel',\n                style: {\n                  color: 'gray'\n                }\n              }\n            }]\n\n          }, { // Secondary yAxis\n            title: {\n              // text: 'Pralan',\n              style: {\n                color: '#f4b400'\n              },\n            },\n            labels: {\n              format: '{value} ¬∞C',\n            },\n\n            opposite: true\n          }, { // third yAxis\n            title: {\n              // text: 'Pro de Savioz',\n              style: {\n                color: '#006600'\n              },\n            },\n            labels: {\n              format: '{value} ¬∞C',\n            },\n\n            opposite: true\n          }],\n\n          legend: {\n            enabled: true,\n            layout: 'horizontal',\n            align: 'center',\n            x: 0,\n            verticalAlign: 'top',\n            y: 0,\n            floating: true,\n          },\n\n          tooltip: {\n            enabled: true,\n //           xDateFormat: '%Y-%m-%d',\n            crosshairs: true,\n            shared: false,\n            split : false,\n            hideDelay : 50,\n            pointFormat: '{series.name}: <b>{point.y:.1f}¬∞C</b>',\n          }\n\n        }\n      }\n    },\n\n    watch: {\n      dataTemperatureGlobalChart(newValue) {\n        this.stockOptions.series = newValue\n       // console.log(this.minValue)\n       // console.log(this.maxValue)\n      },\n    }\n  }\n</script>\n\n<style scoped>\n  .stock {\n    width: available;\n  }\n</style>\n"]}]}