{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js!/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/pages/Dashboard/Technical.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/pages/Dashboard/Technical.vue","mtime":1622618531938},{"path":"/home/amos/Bureau/VSDR_site/.babelrc","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9PcHRpb24yIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL29wdGlvbi5jc3MiOwppbXBvcnQgImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Jhc2UuY3NzIjsKaW1wb3J0IF9PcHRpb24gZnJvbSAiZWxlbWVudC11aS9saWIvb3B0aW9uIjsKaW1wb3J0IF9TZWxlY3QyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL3NlbGVjdC5jc3MiOwppbXBvcnQgImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Jhc2UuY3NzIjsKaW1wb3J0IF9TZWxlY3QgZnJvbSAiZWxlbWVudC11aS9saWIvc2VsZWN0IjsKaW1wb3J0IF9Db2xsYXBzZUl0ZW0yIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2NvbGxhcHNlLWl0ZW0uY3NzIjsKaW1wb3J0ICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9iYXNlLmNzcyI7CmltcG9ydCBfQ29sbGFwc2VJdGVtIGZyb20gImVsZW1lbnQtdWkvbGliL2NvbGxhcHNlLWl0ZW0iOwppbXBvcnQgX0NvbGxhcHNlMiBmcm9tICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9jb2xsYXBzZS5jc3MiOwppbXBvcnQgImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Jhc2UuY3NzIjsKaW1wb3J0IF9Db2xsYXBzZSBmcm9tICJlbGVtZW50LXVpL2xpYi9jb2xsYXBzZSI7Cgp2YXIgX2NvbXBvbmVudDsKCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgppbXBvcnQgTENoZWNrYm94IGZyb20gIkAvY29tcG9uZW50cy9JbnB1dHMvQ2hlY2tib3giOwppbXBvcnQgVGVtcGVyYXR1cmVDaGFydCBmcm9tICJAL2NvbXBvbmVudHMvVGVtcGVyYXR1cmVDaGFydCI7CmltcG9ydCBkb3dubG9hZENzdiBmcm9tICJ2dWUtanNvbi1jc3YiOwppbXBvcnQgeyBGb3JtR3JvdXBJbnB1dCBhcyBGZ0lucHV0IH0gZnJvbSAiQC9jb21wb25lbnRzIjsKaW1wb3J0IGRiX3JlcSBmcm9tICJAL2NvbnN0YW50cy9pbmZsdXhfcmVxdWVzdHMuanNvbiI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBsYXRpbml6ZSBmcm9tICcuLi8uLi9qcy9sYXRpbml6ZSc7CmltcG9ydCBBbnRlbm5hQ2FyZCBmcm9tICIuLi8uLi9jb21wb25lbnRzL0FudGVubmFDYXJkIjsKaW1wb3J0IGRvd25sb2FkRGF0YSBmcm9tICIuLi8uLi9jb21wb25lbnRzL2Rvd25sb2FkRGF0YSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVjaG5pY2FsIiwKICBjb21wb25lbnRzOiB7CiAgICBBbnRlbm5hQ2FyZDogQW50ZW5uYUNhcmQsCiAgICBMQ2hlY2tib3g6IExDaGVja2JveCwKICAgIGRvd25sb2FkRGF0YTogZG93bmxvYWREYXRhCiAgfSwKICBjb21wb25lbnQ6IChfY29tcG9uZW50ID0gewogICAgVGVtcGVyYXR1cmVDaGFydDogVGVtcGVyYXR1cmVDaGFydCwKICAgIGRvd25sb2FkQ3N2OiBkb3dubG9hZENzdgogIH0sIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50LCBfQ29sbGFwc2UubmFtZSwgX0NvbGxhcHNlKSwgX2RlZmluZVByb3BlcnR5KF9jb21wb25lbnQsIF9Db2xsYXBzZUl0ZW0ubmFtZSwgX0NvbGxhcHNlSXRlbSksIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50LCAiTENoZWNrYm94IiwgTENoZWNrYm94KSwgX2RlZmluZVByb3BlcnR5KF9jb21wb25lbnQsICJGZ0lucHV0IiwgRmdJbnB1dCksIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50LCBfU2VsZWN0Lm5hbWUsIF9TZWxlY3QpLCBfZGVmaW5lUHJvcGVydHkoX2NvbXBvbmVudCwgX09wdGlvbi5uYW1lLCBfT3B0aW9uKSwgX2NvbXBvbmVudCksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy4kUFJPSkVDVCA9IGxvY2F0aW9uLmhvc3RuYW1lLnNwbGl0KCcuJylbMF07CiAgICBjb25zb2xlLmxvZyh0aGlzLiRTRU5TT1JTTElTVEpTT04pOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmICgodGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLnR5cGUgPT09ICdoZWknIHx8IHRoaXMuJFNFTlNPUlNMSVNUSlNPTlswXVtpXS50eXBlID09PSAnZGVjZW50bGFiJykgJiYgdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLnByb2plY3QgPT0gdGhpcy4kUFJPSkVDVCkgewogICAgICAgIHRoaXMuJGdsb2JhbExvYWREYXRhKHRoaXMuJFNFTlNPUlNMSVNUSlNPTlswXVtpXS50eXBlLCB0aGlzLiRTRU5TT1JTTElTVEpTT05bMF1baV0ubG9jYXRpb24pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuJFNFTlNPUlNMSVNUSlNPTlswXVtpXS50eXBlID09PSAnZ2F0ZXdheScgJiYgdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLnByb2plY3QgPT0gdGhpcy4kUFJPSkVDVCkgewogICAgICAgIHZhciBnYXRld2F5ID0gewogICAgICAgICAgdHlwZTogMSwKICAgICAgICAgIGlkOiAxLAogICAgICAgICAgcG9zaXRpb25fbmFtZTogdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLnJlYWxOYW1lLAogICAgICAgICAgcG9zaXRpb246IFt0aGlzLiRTRU5TT1JTTElTVEpTT05bMF1baV0ubGF0LCB0aGlzLiRTRU5TT1JTTElTVEpTT05bMF1baV0ubG5nXSwKICAgICAgICAgIGV1aTogdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLmV1aSwKICAgICAgICAgIGxhc3RTZWVuOiAiLSIsCiAgICAgICAgICB0aW1lU3RhbXA6ICIiLAogICAgICAgICAgaXNVcDogZmFsc2UKICAgICAgICB9OwogICAgICAgIHRoaXMuYW50ZW5uYXMucHVzaChnYXRld2F5KTsKICAgICAgfQogICAgfQoKICAgIGNvbnNvbGUubG9nKHRoaXMuYW50ZW5uYXMpOwogICAgdGhpcy5zZW5zb3JzID0gdGhpcy4kZ2xvYmFsU2Vuc29yczsKICAgIHZhciBwcm9taXNlcyA9IFtdOwoKICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCB0aGlzLmFudGVubmFzLmxlbmd0aDsgX2krKykgewogICAgICBwcm9taXNlcy5wdXNoKGF4aW9zKCdodHRwczovL25vZGVyZWQud2F0ZXJtb24uY2gvZ2F0ZXdheT9ldWk9JyArIHRoaXMuYW50ZW5uYXNbX2ldLmV1aSwgewogICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgbW9kZTogJ29yaWdpbicsCiAgICAgICAgY2FjaGU6ICduby1jYWNoZScsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgIH0KICAgICAgfSkpOwogICAgfQoKICAgIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgZm9yICh2YXIgX2kyID0gMDsgX2kyIDwgcmVzLmxlbmd0aDsgX2kyKyspIHsKICAgICAgICB2YXIgdGltZXN0YW1wID0gbmV3IERhdGUocmVzW19pMl0uZGF0YS50aW1lc3RhbXApOwogICAgICAgIF90aGlzLmFudGVubmFzW19pMl0udGltZXN0YW1wID0gdGltZXN0YW1wLnRvTG9jYWxlU3RyaW5nKCdmci1DSCcsIHsKICAgICAgICAgIGRhdGVTdHlsZTogJ3Nob3J0JwogICAgICAgIH0pICsgJyDDoCAnICsgdGltZXN0YW1wLnRvTG9jYWxlU3RyaW5nKCdmci1DSCcsIHsKICAgICAgICAgIHRpbWVTdHlsZTogJ3Nob3J0JwogICAgICAgIH0pOwogICAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpOwoKICAgICAgICBpZiAoX3RoaXMuJHNlY29uZEJldHdlZW5EYXRlKG5vdywgdGltZXN0YW1wKSA8IDYwKSB7CiAgICAgICAgICBfdGhpcy5hbnRlbm5hc1tfaTJdLmlzVXAgPSB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpcy5hbnRlbm5hc1tfaTJdLmlzVXAgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKHgpIHsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMucGVuZGluZyA9IGZhbHNlOwogICAgICB9LCA1MDApOwogICAgfSk7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLiRTRU5TT1JTTElTVEpTT05bMF0ubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKHRoaXMuJFNFTlNPUlNMSVNUSlNPTlswXVtpXS50eXBlID09PSAnZGVjZW50bGFiJyAmJiB0aGlzLiRTRU5TT1JTTElTVEpTT05bMF1baV0ucHJvamVjdCA9PT0gdGhpcy4kUFJPSkVDVCkgewogICAgICAgIHZhciB0ZW1wID0gewogICAgICAgICAgImxvY2F0aW9uIjogdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLmxvY2F0aW9uLAogICAgICAgICAgInJlYWxOYW1lIjogdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLnJlYWxOYW1lCiAgICAgICAgfTsKICAgICAgICB0aGlzLmxvY2F0LnB1c2godGVtcCk7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2NhdDogW10sCiAgICAgIHNlbnNvclN0YXRlOiAnJywKICAgICAgYW50ZW5uYXM6IFtdLAogICAgICBwZW5kaW5nOiB0cnVlLAogICAgICBzZW5zb3JzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExvY2F0aW9uczogZnVuY3Rpb24gZ2V0TG9jYXRpb25zKCkgewogICAgICB2YXIgbG9jYXQgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMuJFNFTlNPUlNMSVNUSlNPTlswXVtpXS50eXBlID09PSAnZGVjZW50bGFiJyAmJiB0aGlzLiRTRU5TT1JTTElTVEpTT05bMF1baV0ucHJvamVjdCA9PT0gdGhpcy4kUFJPSkVDVCkgewogICAgICAgICAgdmFyIHRlbXAgPSB7CiAgICAgICAgICAgICJsb2NhdGlvbiI6IHRoaXMuJFNFTlNPUlNMSVNUSlNPTlswXVtpXS5sb2NhdGlvbiwKICAgICAgICAgICAgInJlYWxOYW1lIjogdGhpcy4kU0VOU09SU0xJU1RKU09OWzBdW2ldLnJlYWxOYW1lCiAgICAgICAgICB9OwogICAgICAgICAgbG9jYXQucHVzaCh0ZW1wKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBsb2NhdDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Technical.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n   <h1>Technical page</h1>\n  </div>\n</template>\n\n<script>\n  import LCheckbox from \"@/components/Inputs/Checkbox\";\n  import TemperatureChart from \"@/components/TemperatureChart\";\n  import downloadCsv from \"vue-json-csv\";\n  import {Collapse, CollapseItem, Option, Select} from \"element-ui\";\n  import {FormGroupInput as FgInput} from \"@/components\";\n  import db_req from \"@/constants/influx_requests.json\";\n  import axios from \"axios\"\n  import latinize from '../../js/latinize'\n  import AntennaCard from \"../../components/AntennaCard\";\n  import downloadData from \"../../components/downloadData\";\n\n  export default {\n    name: \"Technical\",\n    components: {AntennaCard, LCheckbox, downloadData},\n    component: {\n      TemperatureChart, downloadCsv,\n      [Collapse.name]: Collapse,\n      [CollapseItem.name]: CollapseItem,\n      LCheckbox, FgInput,\n      [Select.name]: Select,\n      [Option.name]: Option\n    },\n\n    mounted() {\n      this.$PROJECT = location.hostname.split('.')[0]\n      console.log(this.$SENSORSLISTJSON)\n      for(var i = 0; i<this.$SENSORSLISTJSON[0].length; i++){\n        if((this.$SENSORSLISTJSON[0][i].type === 'hei' || this.$SENSORSLISTJSON[0][i].type === 'decentlab') && this.$SENSORSLISTJSON[0][i].project == this.$PROJECT){\n          this.$globalLoadData(this.$SENSORSLISTJSON[0][i].type, this.$SENSORSLISTJSON[0][i].location)\n        }else if (this.$SENSORSLISTJSON[0][i].type === 'gateway' &&  this.$SENSORSLISTJSON[0][i].project == this.$PROJECT){\n         var gateway = {\n              type: 1,\n              id: 1,\n              position_name: this.$SENSORSLISTJSON[0][i].realName,\n              position: [this.$SENSORSLISTJSON[0][i].lat, this.$SENSORSLISTJSON[0][i].lng],\n              eui: this.$SENSORSLISTJSON[0][i].eui,\n              lastSeen: \"-\",\n              timeStamp: \"\",\n              isUp: false,\n            }\n            this.antennas.push(gateway)\n        }\n      }\n      console.log(this.antennas)\n\n      //local copy of the sensors array\n      this.sensors = this.$globalSensors\n\n      /**\n       * Update antenna states\n       */\n      var promises = []\n\n      // We first create an array of promises from remote data containing antennas statuses\n      for (let i = 0; i < this.antennas.length; i++) {\n        promises.push(\n          axios('https://nodered.watermon.ch/gateway?eui=' + this.antennas[i].eui, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'origin', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }))\n      }\n\n      // When all promises will be resolved, when then do update timestamps\n      Promise.all(promises)\n        .then((res) => {\n          for (let i = 0; i < res.length; i++) {\n            let timestamp = new Date(res[i].data.timestamp);\n\n            this.antennas[i].timestamp = timestamp.toLocaleString('fr-CH', {dateStyle: 'short'}) + ' à ' + timestamp.toLocaleString('fr-CH', {timeStyle: 'short'})\n            let now = new Date();\n\n            if (this.$secondBetweenDate(now, timestamp) < 60) {\n              this.antennas[i].isUp = true;\n            } else {\n              this.antennas[i].isUp = false;\n            }\n          }\n        })\n        .finally(x => {\n          setTimeout(() => {\n            this.pending = false;\n          }, 500\n        )\n        })\n\n      for(var i = 0; i < this.$SENSORSLISTJSON[0].length; i++){\n        if(this.$SENSORSLISTJSON[0][i].type === 'decentlab' && this.$SENSORSLISTJSON[0][i].project === this.$PROJECT){\n          var temp = {\"location\" : this.$SENSORSLISTJSON[0][i].location ,\n            \"realName\" : this.$SENSORSLISTJSON[0][i].realName}\n          this.locat.push(temp)\n        }\n      }\n    },\n\n    data() {\n      return {\n        locat : [],\n        sensorState: '',                 //state of the sensors\n        antennas: [],\n        pending: true,\n        sensors : []\n      }\n    },\n\n    methods: {\n      getLocations : function () {\n        var locat = []\n        for(var i = 0; i < this.$SENSORSLISTJSON[0].length; i++){\n          if(this.$SENSORSLISTJSON[0][i].type === 'decentlab' && this.$SENSORSLISTJSON[0][i].project === this.$PROJECT){\n            var temp = {\"location\" : this.$SENSORSLISTJSON[0][i].location ,\n                        \"realName\" : this.$SENSORSLISTJSON[0][i].realName}\n            locat.push(temp)\n          }\n        }\n        //console.log(locat)\n        return locat\n      }\n\n    }\n  }\n</script>\n"],"sourceRoot":"src/pages/Dashboard"}]}