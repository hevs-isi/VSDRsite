{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js!/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/pages/Dashboard/Dashboard/Overview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/pages/Dashboard/Dashboard/Overview.vue","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/.babelrc","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9UYWJsZUNvbHVtbjIgZnJvbSAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvdGFibGUtY29sdW1uLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX1RhYmxlQ29sdW1uIGZyb20gImVsZW1lbnQtdWkvbGliL3RhYmxlLWNvbHVtbiI7CmltcG9ydCBfVGFibGUyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL3RhYmxlLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX1RhYmxlIGZyb20gImVsZW1lbnQtdWkvbGliL3RhYmxlIjsKCnZhciBfY29tcG9uZW50czsKCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgppbXBvcnQgVGVtcGVyYXR1cmVDaGFydEdsb2JhbCBmcm9tICIuLi8uLi8uLi9jb21wb25lbnRzL1RlbXBlcmF0dXJlQ2hhcnRHbG9iYWwiOwppbXBvcnQgTWFwU2Vuc29yIGZyb20gIkAvY29tcG9uZW50cy9NYXBTZW5zb3IiOwppbXBvcnQgTWV0ZW8gZnJvbSAiQC9jb21wb25lbnRzL01ldGVvIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFdlYmNhbUNhcmQgZnJvbSAiQC9jb21wb25lbnRzL1dlYmNhbUNhcmQiOwp2YXIgZmllbGRfZ3JvdW5kVGVtcGVyYXR1cmUgPSAncGF5bG9hZF9maWVsZHNfdGVtcGVyYXR1cmVfdGFyZ2V0X3ZhbHVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IChfY29tcG9uZW50cyA9IHsKICAgIFdlYmNhbUNhcmQ6IFdlYmNhbUNhcmQsCiAgICBNZXRlbzogTWV0ZW8sCiAgICBNYXBTZW5zb3I6IE1hcFNlbnNvcgogIH0sIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50cywgX1RhYmxlLm5hbWUsIF9UYWJsZSksIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50cywgX1RhYmxlQ29sdW1uLm5hbWUsIF9UYWJsZUNvbHVtbiksIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50cywgIlRlbXBlcmF0dXJlQ2hhcnRHbG9iYWwiLCBUZW1wZXJhdHVyZUNoYXJ0R2xvYmFsKSwgX2NvbXBvbmVudHMpLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjZW50ZXJNYXBBeWVudDogWzQ2LjI4MywgNy40MF0sCiAgICAgIGNlbnRlck1hcFN0bGVvOiBbNDYuMjQ5LCA3LjQyNl0sCiAgICAgIG1ldGVvU3JjQXllbnQ6ICdodHRwczovL21ldGVvLnNlYXJjaC5jaC93aWRnZXQvQW56w6hyZS5mci5odG1sJywKICAgICAgbWV0ZW9TcmNTdGxlbzogJ2h0dHBzOi8vbWV0ZW8uc2VhcmNoLmNoL3dpZGdldC9TdC1sw6lvbmFyZCcsCiAgICAgIHNlbnNvcnM6IFtdLAogICAgICBzZW5zb3JMaXN0SnNvbjogW10sCiAgICAgIHNlcmllc19jaGFydDogW3sKICAgICAgICBkYXRhOiBbXQogICAgICB9XSwKICAgICAgd2luZG93OiB7CiAgICAgICAgd2lkdGg6IDAsCiAgICAgICAgaGVpZ2h0OiAwCiAgICAgIH0sCiAgICAgIGNhbTogewogICAgICAgIHVybDogIiIsCiAgICAgICAgbG9jYXRpb246ICIiCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgc29ydGVkU2Vuc29yczogZnVuY3Rpb24gc29ydGVkU2Vuc29ycygpIHsKICAgICAgcmV0dXJuIHRoaXMuc2Vuc29ycy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIGEucmVhbE5hbWUgPiBiLnJlYWxOYW1lID8gMSA6IGIucmVhbE5hbWUgPiBhLnJlYWxOYW1lID8gLTEgOiAwOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5oYW5kbGVSZXNpemUsIHsKICAgICAgcGFzc2l2ZTogdHJ1ZQogICAgfSk7CiAgICB0aGlzLmhhbmRsZVJlc2l6ZSgpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdmFyIHMgPSBbXTsKICAgIHZhciBjb2xvciA9IFtdOwogICAgYXhpb3MuZ2V0KHRoaXMuJFNFUlZFUlVSTCArICdzZW5zb3JMaXN0JykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIF90aGlzLnNlbnNvckxpc3RKc29uLnB1c2gocmVzLmRhdGEpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5zZW5zb3JMaXN0SnNvblswXS5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChfdGhpcy5zZW5zb3JMaXN0SnNvblswXVtpXS5wcm9qZWN0ID09PSBfdGhpcy4kUFJPSkVDVCkgewogICAgICAgICAgX3RoaXMuJGdsb2JhbExvYWREYXRhKF90aGlzLnNlbnNvckxpc3RKc29uWzBdW2ldLnR5cGUsIF90aGlzLnNlbnNvckxpc3RKc29uWzBdW2ldLmxvY2F0aW9uKTsKCiAgICAgICAgICBfdGhpcy5zZW5zb3JzID0gX3RoaXMuJGdsb2JhbFNlbnNvcnMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICByZXR1cm4gYS5sb2NhdGlvbiA+IGIubG9jYXRpb24gPyAxIDogYi5sb2NhdGlvbiA+IGEubG9jYXRpb24gPyAtMSA6IDA7CiAgICAgICAgICB9KTsKCiAgICAgICAgICBpZiAoX3RoaXMuc2Vuc29yTGlzdEpzb25bMF1baV0udHlwZSA9PT0gJ2RlY2VudGxhYicpIHsKICAgICAgICAgICAgY29sb3IucHVzaChfdGhpcy5zZW5zb3JMaXN0SnNvblswXVtpXS5jb2xvcik7CiAgICAgICAgICAgIHZhciBjb2xvckluZGV4ID0gMDsKCiAgICAgICAgICAgIF90aGlzLiRsb2FkU2VyaWUoJ2RlY2VudGxhYicsIF90aGlzLnNlbnNvckxpc3RKc29uWzBdW2ldLmxvY2F0aW9uLCBmaWVsZF9ncm91bmRUZW1wZXJhdHVyZSwgX3RoaXMuc2Vuc29yTGlzdEpzb25bMF1baV0ucmVhbE5hbWUsICIzMG0iLCAiMjRoIikudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAgICAgcmVzdWx0WzBdLmNvbG9yID0gY29sb3JbY29sb3JJbmRleF07CiAgICAgICAgICAgICAgY29sb3JJbmRleCsrOwogICAgICAgICAgICAgIHMucHVzaChyZXN1bHRbMF0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMuc2Vuc29yTGlzdEpzb25bMF1baV0udHlwZSA9PT0gJ2dhdGV3YXknKSB7CiAgICAgICAgICAgIF90aGlzLiRHQVRFV0FZTElTVEpTT04ucHVzaChfdGhpcy5zZW5zb3JMaXN0SnNvblswXVtpXSk7CiAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzLnNlbnNvckxpc3RKc29uWzBdW2ldLnR5cGUgPT09ICdjYW0nKSB7CiAgICAgICAgICAgIF90aGlzLmNhbS51cmwgPSBfdGhpcy5zZW5zb3JMaXN0SnNvblswXVtpXS51cmw7CiAgICAgICAgICAgIF90aGlzLmNhbS5sb2NhdGlvbiA9IF90aGlzLnNlbnNvckxpc3RKc29uWzBdW2ldLnJlYWxOYW1lOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgX3RoaXMuJFNFTlNPUlNMSVNUSlNPTi5wdXNoKF90aGlzLnNlbnNvckxpc3RKc29uWzBdKTsKCiAgICAgIF90aGlzLnNlcmllc19jaGFydCA9IHM7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgfSk7CiAgICBheGlvcy5nZXQodGhpcy4kU0VSVkVSVVJMICsgJ2NvbGxhYm9yYXRvckxpc3QnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHt9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgfSk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLmhhbmRsZVJlc2l6ZSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVSZXNpemU6IGZ1bmN0aW9uIGhhbmRsZVJlc2l6ZSgpIHsKICAgICAgdGhpcy53aW5kb3cud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDsKICAgICAgdGhpcy53aW5kb3cuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0OwogICAgfQogIH0KfTs="},{"version":3,"sources":["Overview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <!--temperature part-->\n      <div class=\"col-xl-8 col-md-16\">\n\n        <card>\n          <h4 class=\"card-title\">Températures du sol - 24 dernières heures</h4>\n          <TemperatureChartGlobal :dataTemperatureGlobalChart=\"series_chart\"/>\n        </card>\n\n        <h4>Mesures actuelles</h4>\n        <div class=\"row\">\n          <div class=\"col-lg-4\" v-for=\"(sensor) in sortedSensors.filter( s=>s.type === 'decentlab')\">\n\n            <!--{{sensor.frostPointValue}}-->\n\n            <div v-if=\"sensor.frostRiskValue[0] == 1\">\n              <card :title=\"sensor.realName\"><!--NO FROST-->\n                <div class=\"row vertical-center\">\n                  <div class=\"col-lg-6\"\n                       style=\"text-align: center; border-right-style: solid ; border-right-color: #dcdcdc\">\n                    <h3>{{sensor.temp_target[0]}}°C</h3>\n                    <div class=\"lightText\">Sol</div>\n                  </div>\n                  <div class=\"col-lg-6\" style=\"text-align: center\">\n                    <h3>{{sensor.temp_head[0]}}°C</h3>\n                    <div class=\"lightText\">Air</div>\n                  </div>\n                </div>\n                <br>\n                <div class=\"row vertical-center\" v-if=\"sensor.humidity[0] != undefined\">\n                  <div class=\"col-lg-6\" style=\"text-align: center; border-right-style: solid ; border-right-color: #dcdcdc\">\n                    <h3 v-if=\"sensor.temp_head <= 0\">{{sensor.frostPointValue[0]}}°C</h3>\n                    <h3 v-else>-</h3>\n                    <div class=\"lightText\">Point de givrage</div>\n                  </div>\n                  <div class=\"col-lg-6\" style=\"text-align: center\">\n                    <h3>{{sensor.humidity[0].toFixed(1)}}%</h3>\n                    <div class=\"lightText\">Humidité</div>\n                  </div>\n                </div>\n                <div class=\"col-lg-12\" style=\"text-align: center\">\n                  <h4>Risque de givre élevé </h4>\n                  <img src=\"../../../../public/static/img/warningFrost.png\" align=\"center\" width=\"35%\">\n                </div>\n              </card>\n            </div>\n\n            <div v-if=\"sensor.frostRiskValue[0] == 0\">\n              <card :title=\"sensor.realName\"><!--NO FROST-->\n                <div class=\"row vertical-center\">\n                  <div class=\"col-lg-6\"\n                       style=\"text-align: center; border-right-style: solid ; border-right-color: #dcdcdc\">\n                    <h3>{{sensor.temp_target[0]}}°C</h3>\n                    <div class=\"lightText\">Sol</div>\n                  </div>\n                  <div class=\"col-lg-6\" style=\"text-align: center\">\n                    <h3>{{sensor.temp_head[0]}}°C</h3>\n                    <div class=\"lightText\">Air</div>\n                  </div>\n\n                </div>\n                <br>\n                <div class=\"row vertical-center\" v-if=\"sensor.humidity[0] != undefined\">\n                  <div class=\"col-lg-6\" style=\"text-align: center; border-right-style: solid ; border-right-color: #dcdcdc\">\n                    <h3 v-if=\"sensor.temp_head <= 0\">{{sensor.frostPointValue[0]}}°C</h3>\n                    <h3 v-else>-</h3>\n                    <div class=\"lightText\">Point de givrage</div>\n                  </div>\n                  <div class=\"col-lg-6\" style=\"text-align: center\">\n                    <h3>{{sensor.humidity[0].toFixed(1)}}%</h3>\n                    <div class=\"lightText\">Humidité</div>\n                  </div>\n                </div>\n                <div class=\"col-lg-12\" style=\"text-align: center\">\n                  <h4>Risque de givre modéré</h4>\n                  <img src=\"../../../../public/static/img/warningLightFrost.png\" align=\"center\" width=\"35%\">\n                </div>\n              </card>\n            </div>\n\n            <div v-if=\"sensor.frostRiskValue[0] == -1\">\n              <card :title=\"sensor.realName\"><!--NO FROST-->\n                <div class=\"row vertical-center\">\n                  <div class=\"col-lg-6\"\n                       style=\"text-align: center; border-right-style: solid ; border-right-color: #dcdcdc\">\n                    <h3>{{sensor.temp_target[0]}}°C</h3>\n                    <div class=\"lightText\">Sol</div>\n                  </div>\n                  <div class=\"col-lg-6\" style=\"text-align: center\">\n                    <h3>{{sensor.temp_head[0]}}°C</h3>\n                    <div class=\"lightText\">Air</div>\n                  </div>\n                </div>\n                <br>\n                <div class=\"row vertical-center\" v-if=\"sensor.humidity[0] != undefined\">\n                  <div class=\"col-lg-6\" style=\"text-align: center; border-right-style: solid ; border-right-color: #dcdcdc\">\n                    <h3 v-if=\"sensor.temp_head <= 0\">{{sensor.frostPointValue[0]}}°C</h3>\n                    <h3 v-else>-</h3>\n                    <div class=\"lightText\">Point de givrage</div>\n                  </div>\n                  <div class=\"col-lg-6\" style=\"text-align: center\">\n                    <h3>{{sensor.humidity[0].toFixed(1)}}%</h3>\n                    <div class=\"lightText\">Humidité</div>\n                  </div>\n                </div>\n              </card>\n            </div>\n\n          </div>\n        </div>\n\n  <!--      <card>\n          <div>\n            <h4 class=\"card-title\">Précipitations</h4>\n            <br>\n            <table class=\"table table-striped\">\n              <thead class=\"thead-light\">\n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Depuis 4 h</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">4 h</th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Depuis 1 h</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">1 h</th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Depuis 30 m</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">30 m</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"(sensor,index) in sortedSensors.filter( s=>s.type === 'hei')\">\n                <th scope=\"row\">{{sensor.realName}}</th>\n                <td v-if=\"sensor.cumul_snow4h[0] != undefined && ((sensor.cumul_snow4h[0]-sensor.snowOffset[0])/10) >=0\">{{ ((sensor.cumul_snow4h[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n                <td v-if=\"sensor.cumul_snow1h[0] != undefined && ((sensor.cumul_snow1h[0]-sensor.snowOffset[0])/10) >=0\">{{ ((sensor.cumul_snow1h[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n                <td v-if=\"sensor.cumul_snow30m[0] != undefined && ((sensor.cumul_snow30m[0]-sensor.snowOffset[0])/10) >=0\">{{ ((sensor.cumul_snow30m[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </card>\n\n        <card>\n          <div>\n            <h4 class=\"card-title\">Hauteurs de neige</h4>\n            <br>\n            <table class=\"table table-striped\">\n              <thead class=\"thead-light\">\n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Il y a 4 h</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">4h</th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Il y a 1 h</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">1h</th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Il y a 30 m</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">30 m</th>\n                <th scope=\"col\" v-if=\"window.width > 500\">Actuellement</th>\n                <th scope=\"col\" v-if=\"window.width <= 500\">Maint.</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"(sensor) in sortedSensors.filter( s=>s.type === 'hei')\">\n\n                <th scope=\"row\">{{sensor.realName}}</th>\n                <td v-if=\"sensor.snow_4h[0] != undefined && (sensor.snow_4h[0]-sensor.snowOffset[0])/10 >= 0\">{{ ((sensor.snow_4h[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n                <td v-if=\"sensor.snow_1h[0] != undefined && (sensor.snow_1h[0]-sensor.snowOffset[0])/10 >= 0\">{{ ((sensor.snow_1h[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n                <td v-if=\"sensor.snow_30m[0] != undefined && (sensor.snow_30m[0]-sensor.snowOffset[0])/10 >= 0\">{{ ((sensor.snow_30m[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n                <td v-if=\"sensor.snow[0] != undefined && (sensor.snow[0]-sensor.snowOffset[0])/10 >= 0\">{{ ((sensor.snow[0]-sensor.snowOffset[0])/10).toFixed(0)}} cm</td>\n                <td v-else>0 cm</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </card>-->\n\n        <WebcamCard :src=\"cam.url\" :location=\"cam.location\"></WebcamCard>\n      </div>\n\n      <div class=\"col-xl-4 col-md-7\">\n        <!--Map part-->\n        <MapSensor v-if=\"this.$PROJECT=='ayent'\" :sensors=\"this.sensors\" :center=\"centerMapAyent\"></MapSensor>\n        <MapSensor v-if=\"this.$PROJECT=='st-leo'\" :sensors=\"this.sensors\" :center=\"centerMapStleo\"></MapSensor>\n\n        <!--Meteo widget-->\n        <meteo v-if=\"this.$PROJECT=='ayent'\" :src=\"meteoSrcAyent\"></meteo>\n        <meteo v-if=\"this.$PROJECT=='st-leo'\" :src=\"meteoSrcStleo\"></meteo>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  import {Table, TableColumn} from 'element-ui'\n  //divers\n  import TemperatureChartGlobal from \"../../../components/TemperatureChartGlobal\";\n  import MapSensor from \"@/components/MapSensor\";\n  import Meteo from \"@/components/Meteo\";\n  import axios from \"axios\"\n  import WebcamCard from \"@/components/WebcamCard\";\n  //QUERY\n  const field_groundTemperature = 'payload_fields_temperature_target_value'\n  export default {\n    components: {\n      WebcamCard,\n      Meteo,\n      MapSensor,\n      [Table.name]: Table,\n      [TableColumn.name]: TableColumn,\n      TemperatureChartGlobal,\n\n    },\n    data() {\n      return {\n        centerMapAyent : [46.283, 7.40],\n        centerMapStleo : [46.249, 7.426],\n        meteoSrcAyent : 'https://meteo.search.ch/widget/Anzère.fr.html',\n        meteoSrcStleo : 'https://meteo.search.ch/widget/St-léonard',\n\n        sensors: [],                                                           //contain all sensors\n        sensorListJson : [],\n\n        series_chart: [{                                                        //serie of the 3 sensors, used just in this page\n          data: [],\n        }],\n        window: {                                                             //Windows size, used for meteo widget\n          width: 0,\n          height: 0,\n        },\n        cam : {\n          url :\"\",\n          location:\"\"\n        }\n      }\n    },\n    computed :{\n      sortedSensors : function(){\n        return this.sensors.sort((a,b) => (a.realName > b.realName) ? 1 : ((b.realName > a.realName) ? -1 : 0)) //sorted by alphabetic order\n\n\n      }\n    },\n\n    created() {\n      //this.$PROJECT = location.hostname.split('.')[0]\n      //listener for window size\n      window.addEventListener('resize', this.handleResize, {passive: true});\n      this.handleResize();\n    },\n\n\n    mounted() {\n      let s = []\n      let color = []\n\n      axios.get(this.$SERVERURL +'sensorList') //http://localhost:4500/sensorList\n        .then(res => {\n          this.sensorListJson.push(res.data);\n          for (var i = 0; i < this.sensorListJson[0].length; i++) {\n            if (this.sensorListJson[0][i].project === this.$PROJECT) {\n\n              this.$globalLoadData(this.sensorListJson[0][i].type, this.sensorListJson[0][i].location)\n               this.sensors = this.$globalSensors.sort((a,b) => (a.location > b.location) ? 1 : ((b.location > a.location) ? -1 : 0))\n\n              if (this.sensorListJson[0][i].type === 'decentlab') {\n                color.push(this.sensorListJson[0][i].color)\n                var colorIndex = 0;\n                //console.log(color)\n                this.$loadSerie('decentlab', this.sensorListJson[0][i].location, field_groundTemperature, this.sensorListJson[0][i].realName, \"30m\", \"24h\").then(\n                  result => {\n                    result[0].color = color[colorIndex];\n                    colorIndex++\n                    s.push(result[0]);\n                  }\n                )\n              } else if (this.sensorListJson[0][i].type === 'gateway') {\n                //console.log(this.sensorListJson[0][i])\n                this.$GATEWAYLISTJSON.push(this.sensorListJson[0][i])\n              }else if(this.sensorListJson[0][i].type ==='cam'){\n                //console.log(this.sensorListJson[0][i].url)\n                this.cam.url = this.sensorListJson[0][i].url\n                this.cam.location=this.sensorListJson[0][i].realName\n\n              }\n            }\n          }\n          this.$SENSORSLISTJSON.push(this.sensorListJson[0])\n          this.series_chart = s\n        }).catch(error => {\n          console.log(error)\n          // Manage errors if found any\n        })\n\n      axios.get(this.$SERVERURL+'collaboratorList') //http://localhost:4500/sensorList\n        .then(res => {\n         // console.log(res.data)\n        })\n        .catch(error => {\n          console.log(error)\n          // Manage errors if found any\n        })\n    },\n\n    destroyed() {\n      window.removeEventListener('resize', this.handleResize);\n    },\n\n    methods: {\n      //----------------------------------WINDOW PART --------------------------------------------------------------------\n      /**\n       * function to get the window size\n       */\n      handleResize: function () {\n        this.window.width = window.innerWidth;\n        this.window.height = window.innerHeight;\n      },\n\n    },\n  }\n</script>\n\n<style>\n  .lightText {\n    color: darkgrey;\n  }\n</style>\n"],"sourceRoot":"src/pages/Dashboard/Dashboard"}]}