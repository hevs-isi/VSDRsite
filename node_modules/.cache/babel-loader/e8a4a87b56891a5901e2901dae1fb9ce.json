{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js!/home/amos/Bureau/VSDR_site/src/globalFunctions.js","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/globalFunctions.js","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/.babelrc","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/amos/Bureau/VSDR_site/src/globalFunctions.js"],"names":["credInflux","moment","db_req","latLng","axios","L","NProgress","toFront","fr","Influx","require","field_rssi","field_snr","field_battery","data_table","topic_header","data_fields","install","Vue","options","prototype","$PROJECT","location","hostname","split","$SENSORSLISTJSON","$GATEWAYLISTJSON","$SERVERURL","influxClient","InfluxDB","database","host","port","protocol","username","password","$influxClient","$globalSensors","$globalLoadData","sensorType","query","dField","dFieldMerged","join","replace","RSSI_Icon","val","icon","undefined","SNR_Icon","battery_Icon","setLatitude","setLongitude","setRealLocationName","Promise","all","then","parsedRes","map","arr","value","sensor","when","time","where","realName","lat","lng","type","rssi","metadata_gateways_0_rssi","snr","metadata_gateways_0_snr","batt_voltage","payload_fields_battery_voltage_value","temp_head","$loadDataTimeLimit","temp_head30m","temp_head1h","temp_target","temp_target30m","temp_target1h","iconRSSI","iconSNR","iconBattery","frostRiskValue","$loadFrostRisk","humidity","frostPointValue","snowOffset","v","push","payload_fields_BatteryV","$getSnowOffset","sort","a","b","catch","error","console","log","$loadSerie","field","serieName","groupByTime","backTime","offset","mutatedArray","Object","assign","name","color","lineWidth","turboThreshold","data","obj","x","unix","y","timeLimit","first","$refMaxTempValue","$refMinTempValue","$setRefTempChart","actualMonth","Date","getMonth","$exportToJson","serieChart","toJsonised","JSON","stringify","parse","$secondBetweenDate","date1","date2","Math","ceil","abs","queryHum","queryTempHead","queryTempTarget","valueHum","valueTempHead","valueTempTarget","frostRisks","frostPoint","promises","res","last","$calculateFrostPoint","$frostRisk","finally","setTimeout","pending","tempHead","hum","dewPoint","pow","tempKelvin","dewPointKelvin","frostpointKelvin","denominateur","frostpoint","toFixed","tempTarget","margin","$loadCumulateSnowData","timelimit","cumulSnowQuery","cumulArray","i","length","done","project","toto","get","$getRealName"],"mappings":"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","sourcesContent":["import credInflux from './constants/influx'\nimport moment from \"moment\";\nimport db_req from \"./constants/influx_requests.json\"\nimport {latLng} from \"leaflet/dist/leaflet-src.esm\"\nimport axios from \"axios\";\nimport L from \"leaflet\";\nimport NProgress from \"nprogress\";\nimport {toFront} from \"leaflet/src/dom/DomUtil\";\nimport fr from \"element-ui/src/locale/lang/fr\";\nconst Influx = require('influx')\n\n/**\n * The fields to build the queries with, taken from constants file\n */\nconst field_rssi = db_req.field_rssi // RSSI storage topic in InfluxDB\nconst field_snr = db_req.field_snr   // SNR storage topic in InfluxDB\nconst field_battery = db_req.field_battery // Battery storage topic in InfluxDB\nconst data_table = db_req.data_table // Which database to request in InfluxDB\nconst topic_header = db_req.topic_header\nconst data_fields = [\n  \"payload_fields_temperature_head_value\",\n  \"payload_fields_temperature_target_value\",\n  \"metadata_gateways_0_rf_chain\",\n  \"metadata_gateways_0_timestamp\",\n  \"metadata_airtime\",\n  field_snr,\n  field_rssi,\n  field_battery, //battery decentlab\n  \"payload_fields_WaterHeightMm\",\n  \"payload_fields_BatteryV\", //battery hei\n  \"payload_fields_HumiditySHT30\"\n]\n\n\nexport default {\n  install(Vue, options) {\n    Vue.prototype.$PROJECT = location.hostname.split('.')[0]\n    Vue.prototype.$SENSORSLISTJSON=[];\n    Vue.prototype.$GATEWAYLISTJSON=[];\n   // Vue.prototype.$SERVERURL = 'http://localhost:4500/';\n    Vue.prototype.$SERVERURL = 'https://snow-server.watermon.ch:443/';\n\n\n\n    /**\n     * The singleton instance of influxClient, which should be used everywhere\n     * @type {InfluxDB}\n     */\n    const influxClient = new Influx.InfluxDB({\n      database: credInflux.database,\n      host: credInflux.host,\n      port: credInflux.port,\n      protocol: credInflux.protocol,\n      username: credInflux.username,\n      password: credInflux.password\n    });\n\n    Vue.prototype.$influxClient = influxClient\n\n    /**\n     *Sensors Array\n     * @type {*[]}\n     */\n    Vue.prototype.$globalSensors = []\n\n    /**\n     * Loads all global data, should be optimized !\n     */\n    Vue.prototype.$globalLoadData = function (sensorType, location) {\n      this.$globalSensors = []\n\n      let query = `SELECT $FIELDS\n             FROM\n                    \"$DATABASE\"\n             WHERE\n                    \"topic\" = '$TOPIC_HEADER/$DEVICEID/up'\n             ORDER BY time DESC\n             LIMIT\n                    1\n             `;\n\n      // Build the real query from the template one\n      // console.log(\"Data fields query is : \" + data_fields)\n      let dField = data_fields\n      let dFieldMerged = dField.join(\",\")\n\n      query = query.replace(\"$FIELDS\", dFieldMerged)\n      query = query.replace(\"$DATABASE\", data_table)\n      query = query.replace(\"$TOPIC_HEADER\", topic_header)\n      query = query.replace(\"$DEVICEID\", sensorType + \"-\" + location);\n      query = query.replace(/\\n|\\r/g, \" \")\n\n      function RSSI_Icon(val) {\n        let icon = undefined\n        if (val > -100) {\n          icon = 'static/img/technical/Network_full.png'\n        } else if (val > -110 && val <= -100) {\n          icon = 'static/img/technical/Network_good.png'\n        } else if (val > -120 && val <= -110) {\n          icon = 'static/img/technical/Network_bad.png'\n        } else if (val < -120) {\n          icon = 'static/img/technical/Network_nothing.png'\n        }\n\n        return icon\n      }\n\n      function SNR_Icon(val) {\n        if (val > -7.5) {\n          return 'static/img/technical/Network_full.png'\n        } else if (val - 12.5 && val <= -7.5) {\n          return 'static/img/technical/Network_good.png'\n        } else if (val > -17.5 && val <= -12.5) {\n          return 'static/img/technical/Network_bad.png'\n        } else if (val < -17.5) {\n          return 'static/img/technical/Network_nothing.png'\n        }\n      }\n\n      function battery_Icon(val) {\n        if (val >= 2.79) {\n          return 'static/img/technical/battery/Battery_full.png';\n        } else if (val < 2.79 && val >= 2.54) {\n          return 'static/img/technical/battery/Battery_good.png';\n        } else if (val < 2.54 && val >= 2.42) {\n          return 'static/img/technical/battery/Battery_medium.png';\n        } else if (val < 2.42 && val >= 2.34) {\n          return 'static/img/technical/Battery_middleBad.png';\n        } else if (val < 2.18) {\n          return 'static/img/technical/battery/Battery_bad.png';\n        }\n      }\n\n      /**\n       * set the GPS latitude, used into overview.vue for the map\n       * @param location\n       * @returns {number[]}\n       */\n      function setLatitude(location) {\n        if (location === 'telecabine') {\n          return 46.29411\n        } else if (location === 'pralan') {\n          return 46.29894\n        } else if (location === 'prodesavioz') {\n          return 46.26721\n        }else if(location === 'stepstleo'){\n          return 46.250091\n        }\n      }\n\n      function setLongitude(location) {\n        if (location === 'telecabine') {\n          return 7.39557\n        } else if (location === 'pralan') {\n          return 7.40549\n        } else if (location === 'prodesavioz') {\n          return 7.39827\n        }else if(location === 'stepstleo'){\n          return 7.425921\n        }\n      }\n\n      function setRealLocationName(location) {\n        if (location === 'telecabine') {\n          return 'Télécabine'\n        } else if (location === 'pralan') {\n          return 'Pralan'\n        }else if(location === 'prodesavioz'){\n          return 'Pro de Savioz'\n        }else if(location == 'stepstleo'){\n          return 'Step'\n        }\n      }\n\n\n\n\n    //  console.log(query)\n        Promise.all([\n          influxClient.query(query)\n        ]).then(parsedRes => {\n          parsedRes.map(arr => {\n            // If we got something from the DB\n            if (arr[0] != undefined) {\n              // The DB returns a single value with all the data in it\n              let value = arr[0]\n\n              // This is what we are going to put in the data model\n              if (sensorType === 'decentlab') {\n                let sensor = {\n                  when: value.time,\n                  where: location,\n                  realName: setRealLocationName(location),\n                  lat: setLatitude(location),\n                  lng: setLongitude(location),\n                  type: sensorType,\n                  rssi: value.metadata_gateways_0_rssi,\n                  snr: value.metadata_gateways_0_snr,\n                  batt_voltage: value.payload_fields_battery_voltage_value,\n                  temp_head: this.$loadDataTimeLimit(sensorType, location, data_fields[0], '10m'),//value.payload_fields_temperature_head_value,\n                  temp_head30m: this.$loadDataTimeLimit(sensorType, location, data_fields[0], '30m'),\n                  temp_head1h: this.$loadDataTimeLimit(sensorType, location, data_fields[0], '1h'),\n                  temp_target: this.$loadDataTimeLimit(sensorType, location, data_fields[1], '10m'),//value.payload_fields_temperature_target_value,\n                  temp_target30m: this.$loadDataTimeLimit(sensorType, location, data_fields[1], '30m'),\n                  temp_target1h: this.$loadDataTimeLimit(sensorType, location, data_fields[1], '1h'),\n                  iconRSSI: RSSI_Icon(value.metadata_gateways_0_rssi),\n                  iconSNR: SNR_Icon(value.metadata_gateways_0_snr),\n                  iconBattery: battery_Icon(value.payload_fields_battery_voltage_value),\n                  frostRiskValue: this.$loadFrostRisk('hei', location)[0], // this is from the HEI sensor\n                  humidity : this.$loadDataTimeLimit('hei',location, 'payload_fields_HumiditySHT30', '10m'),\n                  frostPointValue: this.$loadFrostRisk('hei', location)[1],\n                  snowOffset: ''\n                }\n\n                // Push the created sensor value to the data\n                // To push the data, we must make a deep copy as Javascript is not clever enough\n                // to see changes there\n                const v = this.$globalSensors\n                v.push(sensor)\n                this.$globalSensors = v\n\n              } else if (sensorType === 'hei') {\n                let sensor = {\n                  when: value.time,\n                  where: location,\n                  realName: setRealLocationName(location),\n                  lat: setLatitude(location),\n                  lng: setLongitude(location),\n                  type: sensorType,\n                  rssi: value.metadata_gateways_0_rssi,\n                  snr: value.metadata_gateways_0_snr,\n                  batt_voltage: value.payload_fields_BatteryV,\n                //  snow: this.$loadDataTimeLimit(sensorType, location, 'payload_fields_WaterHeightMm', '10m'),//value.payload_fields_WaterHeightMm,\n                //  snow_30m: this.$loadDataTimeLimit(sensorType, location, 'payload_fields_WaterHeightMm', '30m'),\n                //  snow_1h: this.$loadDataTimeLimit(sensorType, location, 'payload_fields_WaterHeightMm', '1h'),\n                //  snow_4h: this.$loadDataTimeLimit(sensorType, location, 'payload_fields_WaterHeightMm', '4h'),\n                //  cumul_snow4h: this.$loadCumulateSnowData(sensorType, location, '4h'),\n                //  cumul_snow1h: this.$loadCumulateSnowData(sensorType, location, '1h'),\n                //  cumul_snow30m: this.$loadCumulateSnowData(sensorType, location, '30m'),\n                  iconRSSI: RSSI_Icon(value.metadata_gateways_0_rssi),\n                  iconSNR: SNR_Icon(value.metadata_gateways_0_snr),\n                  iconBattery: battery_Icon(value.payload_fields_BatteryV),\n                 // frostRiskValue: this.$loadFrostRisk('hei', location)[0], // this is from the HEI sensor\n                  snowOffset : this.$getSnowOffset(this.$PROJECT, location),\n                  frostRiskValue: this.$loadFrostRisk('hei', location)[0], // this is from the HEI sensor\n\n                }\n\n                // Push the created sensor value to the data\n                // To push the data, we must make a deep copy as Javascript is not clever enough\n                // to see changes there\n                const v = this.$globalSensors\n                v.push(sensor)\n\n                this.$globalSensors = v.sort((a,b) => (a.realName > b.realName) ? 1 : ((b.realName > a.realName) ? -1 : 0))\n\n              }\n            }\n          });\n        }).catch(error => console.log(error))\n\n    }\n\n    /**\n     * Load a given serie, cleaned\n     * @param paramQuery, field\n     */\n    Vue.prototype.$loadSerie = function (sensorType, location, field, serieName, groupByTime = \"10m\", backTime = \"7d\" , offset = 0) {\n     /* let query = `SELECT median(\"$FIELDS\")\n             FROM\n                    \"$DATABASE\"\n             WHERE\n                    \"topic\" = '$TOPIC_HEADER/$DEVICEID/up'\n             AND\n\n             time>now()-$BACKTIME GROUP BY time($TIMEGROUP)\n            `;*/\n      let query = `SELECT moving_average(\"$FIELDS\",10)\n             FROM\n                    \"$DATABASE\"\n             WHERE\n                    \"topic\" = '$TOPIC_HEADER/$DEVICEID/up'\n             AND\n\n             time>now()-$BACKTIME\n            `;\n\n\n      query = query.replace(\"$FIELDS\", field)\n      query = query.replace(\"$DATABASE\", data_table)\n      query = query.replace(\"$TOPIC_HEADER\", topic_header)\n      query = query.replace(\"$DEVICEID\", sensorType + \"-\" + location);\n      query = query.replace(\"$TIMEGROUP\", groupByTime)\n      query = query.replace(\"$BACKTIME\", backTime)\n      query = query.replace(/\\n|\\r/g, \" \")\n\n      return Promise.all([\n        influxClient.query(query)\n      ]).then(parsedRes => {\n        const mutatedArray = parsedRes.map(arr => {\n\n          if(field === 'payload_fields_WaterHeightMm'){ // if this is snow, i hav to dediuce the offset and reverse the chart.\n            return Object.assign({}, {\n              name: serieName, // name on the chart\n              color: '#4285f4',\n              lineWidth: 0.6,\n              turboThreshold: 60000,\n              // tooltip: {\n              //   valueSuffix: ' V'\n              // },\n              data: arr.map(obj => Object.assign({}, {\n                x: (moment(obj.time).unix()) * 1000,\n                y: obj['moving_average'] == null ? obj['moving_average'] : ((obj['moving_average']-offset)*(-1)/10) //*-1 pour retourner le graph\n              }))\n            });\n          }else{\n            return Object.assign({}, {\n              name: serieName, // name on the chart\n              color: '#4285f4',\n              lineWidth: 0.6,\n              turboThreshold: 60000,\n              // tooltip: {\n              //   valueSuffix: ' V'\n              // },\n              data: arr.map(obj => Object.assign({}, {\n                x: (moment(obj.time).unix()) * 1000,\n                y: obj['moving_average'] == null ? obj['moving_average'] : ((obj['moving_average']-offset))\n              })),\n\n            });\n          }\n        /*  return Object.assign({}, {\n            name: serieName, // name on the chart\n            color: '#4285f4',\n            lineWidth: 0.6,\n            turboThreshold: 60000,\n            // tooltip: {\n            //   valueSuffix: ' V'\n            // },\n            data: arr.map(obj => Object.assign({}, {\n              x: (moment(obj.time).unix()) * 1000,\n              y: obj['median'] == null ? obj['median'] : ((obj['median']-offset)*(-1)) //*-1 pour retourner le graph\n            }))\n          });*/\n\n\n        });\n        return mutatedArray\n      }).catch(error => console.log(error))\n    }\n\n    /**\n     * Load data that have time limit\n     * @param sensorType\n     * @param location\n     * @param field\n     * @param timeLimit\n     * @returns {[]}\n     */\n    Vue.prototype.$loadDataTimeLimit = function (sensorType, location, field, timeLimit) {\n      let query = `SELECT first($FIELDS)\n             FROM\n                    \"$DATABASE\"\n             WHERE\n                    \"topic\" = '$TOPIC_HEADER/$DEVICEID/up'\n             AND\n\n             time>now()-$timeLimit order by time asc limit 1\n            `;\n      query = query.replace(\"$FIELDS\", field)\n      query = query.replace(\"$DATABASE\", data_table)\n      query = query.replace(\"$TOPIC_HEADER\", topic_header)\n      query = query.replace(\"$DEVICEID\", sensorType + \"-\" + location);\n      query = query.replace(\"$timeLimit\", timeLimit)\n      query = query.replace(/\\n|\\r/g, \" \")\n      // console.log(query)\n      let value = []\n      Promise.all([\n        influxClient.query(query)\n      ]).then(parsedRes => {\n        parsedRes.map(arr => {\n          if (arr[0] != undefined) {\n            if(field === 'payload_fields_WaterHeightMm'){\n              //change offset : arr[0].first-offset\n              value.push(arr[0].first)\n\n            }else{\n              value.push(arr[0].first)\n            }\n\n          }\n        });\n      }).catch(error => console.log(error))\n      //console.log(value)\n      return value\n    }\n\n    /**\n     * chart reference min and max for overview page\n     * @type {string}\n     */\n    Vue.prototype.$refMaxTempValue = ''\n    Vue.prototype.$refMinTempValue = ''\n\n    /**\n     * set reference min max for a chart\n     */\n    Vue.prototype.$setRefTempChart = function () {\n      let actualMonth = new Date().getMonth();\n      //console.log(\"ActualMonth : \" + actualMonth)\n      //source : https://planificateur.a-contresens.net/europe/suisse/canton_du_valais/anzere/6559505.html\n      // valeur choisie : max +15° min -15°\n      switch (actualMonth) {\n        case 0: //janvier\n          this.$refMaxTempValue = 15;\n          this.$refMinTempValue = -20;\n          break;\n        case 1: // févier\n          this.$refMaxTempValue = 15;\n          this.$refMinTempValue = -20;\n          break;\n        case 2: // mars\n          this.$refMaxTempValue = 21;\n          this.$refMinTempValue = -15;\n          break;\n        case 3: // avril\n          this.$refMaxTempValue = 25;\n          this.$refMinTempValue = -15;\n          break;\n        case 4: // mai\n          this.$refMaxTempValue = 30;\n          this.$refMinTempValue = 0;\n          break;\n        case 5: // juin\n          this.$refMaxTempValue = 45;\n          this.$refMinTempValue = 10;\n          break;\n        case 6: // juillet\n          this.$refMaxTempValue = 45;\n          this.$refMinTempValue = 5;\n          break;\n        case 7: // aout\n          this.$refMaxTempValue = 40;\n          this.$refMinTempValue = 5;\n          break;\n        case 8: // septembre\n          this.$refMaxTempValue = 30;\n          this.$refMinTempValue = 0;\n          break;\n        case 9: // octobre\n          this.$refMaxTempValue = 25;\n          this.$refMinTempValue = -10;\n          break;\n        case 10: // novembre\n          this.$refMaxTempValue = 20;\n          this.$refMinTempValue = -15;\n          break;\n        case 11: //decembre\n          this.$refMaxTempValue = 18;\n          this.$refMinTempValue = -20;\n          break;\n      }\n    }\n\n\n    /**\n     * to Json array\n     * @param serieChart\n     * @returns {any}\n     */\n    Vue.prototype.$exportToJson = function (serieChart) {\n      let toJsonised = JSON.stringify(serieChart)\n      return JSON.parse(toJsonised)\n    }\n\n    /**\n     * find time between two dates, used to check the antennas\n     * @param date1\n     * @param date2\n     * @returns {number}\n     */\n    Vue.prototype.$secondBetweenDate = function (date1, date2) {\n      return Math.ceil(Math.abs(date1 - date2) / 1000);\n    }\n\n\n    /**\n     * Load frost risk value, calculate from humidity, air temperature and soil temperature\n     */\n    Vue.prototype.$loadFrostRisk = function (sensorType, location) {\n      let queryHum = `SELECT last($FIELDS)\n             FROM\n                    \"mqtt_consumer\"\n             WHERE\n                    \"topic\" = 'hes_ayent-snow/devices/$DEVICEID/up'\n            `;\n      queryHum = queryHum.replace(\"$FIELDS\", \"payload_fields_HumiditySHT30\")\n      queryHum = queryHum.replace(\"$DEVICEID\", 'hei' + \"-\" + location);\n      queryHum = queryHum.replace(/\\n|\\r/g, \" \")\n\n      let queryTempHead = `SELECT last($FIELDS)\n             FROM\n                    \"mqtt_consumer\"\n             WHERE\n                    \"topic\" = 'hes_ayent-snow/devices/$DEVICEID/up'\n            `;\n\n      queryTempHead = queryTempHead.replace(\"$FIELDS\", \"payload_fields_temperature_head_value\")\n      queryTempHead = queryTempHead.replace(\"$DEVICEID\", 'decentlab' + \"-\" + location);\n      queryTempHead = queryTempHead.replace(/\\n|\\r/g, \" \")\n\n      let queryTempTarget = `SELECT last($FIELDS)\n             FROM\n                    \"mqtt_consumer\"\n             WHERE\n                    \"topic\" = 'hes_ayent-snow/devices/$DEVICEID/up'\n            `;\n\n      queryTempTarget = queryTempTarget.replace(\"$FIELDS\", \"payload_fields_temperature_target_value\")\n      queryTempTarget = queryTempTarget.replace(\"$DEVICEID\", 'decentlab' + \"-\" + location);\n      queryTempTarget = queryTempTarget.replace(/\\n|\\r/g, \" \")\n\n       let valueHum = 0\n       let valueTempHead = 0\n       let valueTempTarget = 0\n\n\n      let frostRisks = []\n      let frostPoint = []\n      var promises = [influxClient.query(queryHum), influxClient.query(queryTempHead), influxClient.query(queryTempTarget)]\n      Promise.all(promises)\n        .then((res) => {\n            if( res[0][0] != undefined &&res[1][0] != undefined && res[2][0] != undefined){\n              //console.log(\"hum : \" + res[0][0].last)\n              //console.log(\"head : \" + res[1][0].last)\n              //console.log(\"target : \" + res[2][0].last)\n              if (res[2][0].last < 0) {\n                  valueTempHead = res[1][0].last\n                  valueTempTarget =res[2][0].last\n                  valueHum = res[0][0].last\n                  frostPoint.push(this.$calculateFrostPoint(valueTempHead, valueHum/100, location))\n                  frostRisks.push(this.$frostRisk(frostPoint, valueTempTarget, valueTempHead));\n\n              } else {\n                frostRisks.push(-1)\n                frostPoint='-'\n              }\n            }else{\n              frostRisks.push(-1)\n              frostPoint='-'\n            }\n        }).finally(x => {\n            setTimeout(() => {\n                this.pending = false;\n              }, 500\n            )\n     })\n      /*if (valueTempTarget < 0) {\n        frostPoint = this.$calculateFrostPoint(valueTempHead, valueHum)\n        frostRisks.push(this.$frostRisk(frostPoint, valueTempTarget));\n\n      } else {\n        frostRisks.push(-1);\n      }*/\n\n      return [frostRisks,frostPoint]\n\n    }\n\n\n    /**\n     * * Formule from :\n     * frostPoint : https://fr.wikipedia.org/wiki/Point_de_givrage\n     * dewPoint : https://fr.wikipedia.org/wiki/Point_de_ros%C3%A9e\n     *\n     * @param tempHead\n     * @param hum : not in % but 0.XY\n     * @returns {string}\n     */\n    Vue.prototype.$calculateFrostPoint = function (tempHead, hum, location ) {\n//      console.log(\"il y a un souci : temphead et hum n'ont pas de valeur => pas de point de givrage correct\")\n//      console.log(Math.pow(hum, 1 / 8))\n      var dewPoint = Math.pow(hum, 1 / 8) * (112 + (0.9 * tempHead)) + 0.1 * tempHead - 112;\n      var tempKelvin = tempHead + 273.15;\n      var dewPointKelvin = dewPoint + 273.15;\n//      console.log(location)\n//      console.log(\"temp head : \"+ tempHead)\n//      console.log(\"hum : \" + hum)\n//      console.log(\"dewpoint : \" + dewPoint)\n      var frostpointKelvin = 0;\n      var denominateur = (2954.61 / tempKelvin) + 2.193665 * Math.log(tempKelvin) - 13.3448;\n//      console.log(denominateur)\n      frostpointKelvin = dewPointKelvin + (2671.02 / denominateur) - tempKelvin;\n\n\n      var frostpoint = (frostpointKelvin - 273.15).toFixed(2);\n//      console.log(\"frost Point : \" + frostpoint)\n      return frostpoint\n    }\n\n\n\n    /**\n     * returns : 1 frost, 0 perhaps frost, -1 no risk\n     * @param frostPoint\n     * @param tempTarget\n     * @returns {number}\n     */\n    Vue.prototype.$frostRisk = function (frostPoint, tempTarget,tempHead) {\n    //  console.log(frostPoint)\n      var margin = 2; // margin between temp target and frostPoint\n      if (tempTarget <= frostPoint && tempHead <=1) {\n        // frost\n\n//        console.log(\"frostRisk :  1\")\n        return 1\n      } else if (frostPoint > (tempTarget - (margin )) && tempTarget > frostPoint && tempHead <=1) {\n        // maybe frost\n\n//        console.log(\"frostRisk :  0\")\n        return 0\n      } else {\n        //no frost\n//        console.log(\"frostRisk :  -1\")\n        return -1\n      }\n    }\n\n\n    /**\n     * load cumulate snow data since 365days\n     * @param sensorType\n     * @param location\n     * @param timelimit\n     * @returns {[]}\n     */\n    Vue.prototype.$loadCumulateSnowData = function (sensorType, location, timelimit) {\n      /*create the query*/\n      let query = `SELECT payload_fields_WaterHeightMm\n             FROM\n                    mqtt_consumer\n             WHERE\n                    \"topic\" = 'hes_ayent-snow/devices/$DEVICEID/up'\n             AND time>now()-$TIMELIMIT\n\n             `;\n      query = query.replace(\"$DEVICEID\", sensorType + \"-\" + location)\n      query = query.replace(\"$TIMELIMIT\", timelimit)\n\n      let cumulSnowQuery = 0;\n      let cumulArray = [];\n\n      Promise.all([\n        influxClient.query(query), // WHERE time>now()-365d\n      ]).then(parsedRes => {\n        parsedRes.map(arr => {\n          if (arr[0] != undefined) {\n            //to change arr[0]['payload_fields_WaterHeightMm']-offset\n            cumulSnowQuery = arr[0]['payload_fields_WaterHeightMm'];\n            /*\n            this loop show if the value at position i+i is bigger than the previous, if yes, add the difference\n            to cumulsnow\n             */\n            for (var i = 1; i < arr.length - 1; i++) {\n              if (arr[i]['payload_fields_WaterHeightMm'] <= arr[i - 1]['payload_fields_WaterHeightMm']) {\n                continue;\n              } else {\n                cumulSnowQuery = cumulSnowQuery + (arr[i]['payload_fields_WaterHeightMm'] - arr[i - 1]['payload_fields_WaterHeightMm']);\n              }\n            }\n            cumulArray.push(cumulSnowQuery)\n          }\n        });\n        NProgress.done();\n      }).catch(error => console.log(error))\n      return cumulArray\n    }\n\n\n    /**\n     * get snow offset from json File\n     * @param project\n     * @param location\n     * @returns {[]}\n     */\n    Vue.prototype.$getSnowOffset = function (project, location) {\n      var toto = [];\n      axios.get('https://snow-server.watermon.ch:443/snowOffset')\n        .then(res => {\n          for(var i = 0 ; i< res.data.length; i++){\n            if(res.data[i].project === project && res.data[i].location === location){\n              toto.push(res.data[i].offset)\n            }\n          }\n\n        })\n        .catch(error => {\n          console.log(error)\n        })\n      return toto\n    }\n\n    Vue.prototype.$getRealName = function(project, location){\n      var toto = [];\n      axios.get('https://snow-server.watermon.ch:443/snowOffset')\n        .then(res => {\n          for(var i = 0 ; i< res.data.length; i++){\n            if(res.data[i].project === project && res.data[i].location === location){\n              toto.push(res.data[i].realName)\n            }\n          }\n\n        })\n        .catch(error => {\n          console.log(error)\n        })\n      return toto\n    }\n\n\n\n    }\n}\n"]}]}