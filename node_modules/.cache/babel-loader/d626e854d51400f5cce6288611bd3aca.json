{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js!/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/components/Switch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/components/Switch.vue","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/.babelrc","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdsLXN3aXRjaCcsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiBbQXJyYXksIEJvb2xlYW5dLAogICAgb25UZXh0OiBTdHJpbmcsCiAgICBvZmZUZXh0OiBTdHJpbmcsCiAgICBjb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgIHJldHVybiBbJycsICdibHVlJywgJ2F6dXJlJywgJ2dyZWVuJywgJ29yYW5nZScsICdyZWQnLCAncHVycGxlJywgJ2JsYWNrJ10uaW5jbHVkZXModmFsdWUpOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc3dpdGNoQ2xhc3M6IGZ1bmN0aW9uIHN3aXRjaENsYXNzKCkgewogICAgICB2YXIgYmFzZSA9ICdib290c3RyYXAtc3dpdGNoLSc7CiAgICAgIHZhciBzdGF0ZSA9IHRoaXMubW9kZWwgPyAnb24nIDogJ29mZic7CiAgICAgIHZhciBjbGFzc2VzID0gYmFzZSArIHN0YXRlOwoKICAgICAgaWYgKHRoaXMuY29sb3IpIHsKICAgICAgICBjbGFzc2VzID0gIiIuY29uY2F0KGNsYXNzZXMsICIgIikuY29uY2F0KGJhc2UpLmNvbmNhdCh0aGlzLmNvbG9yKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNsYXNzZXM7CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWx1ZSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHRyaWdnZXJUb2dnbGU6IGZ1bmN0aW9uIHRyaWdnZXJUb2dnbGUoKSB7CiAgICAgIHRoaXMubW9kZWwgPSAhdGhpcy5tb2RlbDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Switch.vue"],"names":[],"mappings":"AAkBA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,CAAA,KAAA,EAAA,OAAA,CADA;AAEA,IAAA,MAAA,EAAA,MAFA;AAGA,IAAA,OAAA,EAAA,MAHA;AAIA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,mBAAA,KAAA,EAAA;AACA,eAAA,CAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,CAAA,KAAA,CAAA;AACA;AALA;AAJA,GAFA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,IAAA,GAAA,mBAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,GAAA,IAAA,GAAA,KAAA;AACA,UAAA,OAAA,GAAA,IAAA,GAAA,KAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,OAAA,aAAA,OAAA,cAAA,IAAA,SAAA,KAAA,KAAA,CAAA;AACA;;AACA,aAAA,OAAA;AACA,KATA;AAUA,IAAA,KAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,KAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AANA;AAVA,GAdA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,KAAA,GAAA,CAAA,KAAA,KAAA;AACA;AAHA;AAjCA,CAAA","sourcesContent":["<template>\n  <div class=\"bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-animate\" :class=\"switchClass\">\n    <div class=\"bootstrap-switch-container\" @click=\"triggerToggle()\">\n      <span class=\"bootstrap-switch-handle-on \" :class=\"`bootstrap-switch-${color}`\">\n        <slot name=\"on\">\n            {{onText}}\n        </slot>\n      </span>\n      <span class=\"bootstrap-switch-label\"></span>\n      <span class=\"bootstrap-switch-handle-off bootstrap-switch-default\">\n        <slot name=\"off\">\n            {{offText}}\n        </slot>\n      </span>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'l-switch',\n    props: {\n      value: [Array, Boolean],\n      onText: String,\n      offText: String,\n      color: {\n        type: String,\n        default: '',\n        validator: (value) => {\n          return ['', 'blue', 'azure', 'green', 'orange', 'red', 'purple', 'black'].includes(value)\n        }\n      }\n    },\n    computed: {\n      switchClass () {\n        let base = 'bootstrap-switch-'\n        let state = this.model ? 'on' : 'off'\n        let classes = base + state\n        if (this.color) {\n          classes = `${classes} ${base}${this.color}`\n        }\n        return classes\n      },\n      model: {\n        get () {\n          return this.value\n        },\n        set (value) {\n          this.$emit('input', value)\n        }\n      }\n    },\n    methods: {\n      triggerToggle () {\n        this.model = !this.model\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}