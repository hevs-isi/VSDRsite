{"remainingRequest":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js!/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amos/Bureau/VSDR_site/src/components/MapSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amos/Bureau/VSDR_site/src/components/MapSensor.vue","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/.babelrc","mtime":1617204143000},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/babel-loader/lib/index.js","mtime":1622616452469},{"path":"/home/amos/Bureau/VSDR_site/node_modules/cache-loader/dist/cjs.js","mtime":1622616452493},{"path":"/home/amos/Bureau/VSDR_site/node_modules/vue-loader/lib/index.js","mtime":1622616466449}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQ2FyZCwgU3RhdHNDYXJkLCBUYWJsZSBhcyBMVGFibGUgfSBmcm9tICJAL2NvbXBvbmVudHMvaW5kZXgiOwppbXBvcnQgeyBMQ29udHJvbExheWVycywgTExheWVyR3JvdXAsIExNYXAsIExNYXJrZXIsIExQb3B1cCwgTFRpbGVMYXllciB9IGZyb20gInZ1ZTItbGVhZmxldCI7CmltcG9ydCBMIGZyb20gImxlYWZsZXQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1hcCIsCiAgY29tcG9uZW50czogewogICAgQ2FyZDogQ2FyZCwKICAgIFN0YXRzQ2FyZDogU3RhdHNDYXJkLAogICAgTE1hcDogTE1hcCwKICAgIExUaWxlTGF5ZXI6IExUaWxlTGF5ZXIsCiAgICBMTWFya2VyOiBMTWFya2VyLAogICAgTFBvcHVwOiBMUG9wdXAsCiAgICBMQ29udHJvbExheWVyczogTENvbnRyb2xMYXllcnMsCiAgICBMTGF5ZXJHcm91cDogTExheWVyR3JvdXAsCiAgICBMVGFibGU6IExUYWJsZQogIH0sCiAgcHJvcHM6IHsKICAgIHNlbnNvcnM6ICcnLAogICAgY2VudGVyOiAnJwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGhvdmVyZWQ6IGZhbHNlLAogICAgICBpbmZvOiBmYWxzZSwKICAgICAgdGlsZVByb3ZpZGVyczogW3sKICAgICAgICBuYW1lOiAnT3BlblRvcG9NYXAnLAogICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnRvcG9tYXAub3JnL3t6fS97eH0ve3l9LnBuZycsCiAgICAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0Ij5PcGVuU3RyZWV0TWFwPC9hPiwgPGEgaHJlZj0iaHR0cDovL3ZpZXdmaW5kZXJwYW5vcmFtYXMub3JnIj5TUlRNPC9hPiB8ICZjb3B5OyA8YSBocmVmPSJodHRwczovL29wZW50b3BvbWFwLm9yZyI+T3BlblRvcG9NYXA8L2E+ICg8YSBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMy4wLyI+Q0MtQlktU0E8L2E+KScKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdPU00nLAogICAgICAgIHZpc2libGU6IHRydWUsCiAgICAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly9vc20ub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJywKICAgICAgICB1cmw6ICdodHRwczovL3tzfS5iYXNlbWFwcy5jYXJ0b2Nkbi5jb20vcmFzdGVydGlsZXMvdm95YWdlci97en0ve3h9L3t5fXtyfS5wbmcnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnU3RhZGlhJywKICAgICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgICB1cmw6ICdodHRwczovL3RpbGVzLnN0YWRpYW1hcHMuY29tL3RpbGVzL2FsaWRhZGVfc21vb3RoL3t6fS97eH0ve3l9e3J9LnBuZz9hcGlfa2V5PWQ0Mzc4ZTEyLWEwYTctNGFlNC1hMmZmLTUwOGQ4YTIzODQ0OCcsCiAgICAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj0iaHR0cHM6Ly9zdGFkaWFtYXBzLmNvbS8iPlN0YWRpYSBNYXBzPC9hPiwgJmNvcHk7IDxhIGhyZWY9Imh0dHBzOi8vb3Blbm1hcHRpbGVzLm9yZyI+T3Blbk1hcFRpbGVzPC9hPiwgJmNvcHk7IDxhIGhyZWY9Imh0dHA6Ly9vcGVuc3RyZWV0bWFwLm9yZyI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ09wZW5TdHJlZXRNYXAnLAogICAgICAgIHZpc2libGU6IHRydWUsCiAgICAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly9vc20ub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJywKICAgICAgICB1cmw6ICdodHRwczovL3RpbGUub3NtLmNoL3N3aXR6ZXJsYW5kL3t6fS97eH0ve3l9LnBuZycKICAgICAgfV0sCiAgICAgIGRldmljZUljb25Gcm9zdDogTC5pY29uKHsKICAgICAgICBpY29uVXJsOiByZXF1aXJlKCcuLi8uLi9wdWJsaWMvc3RhdGljL2ltZy93YXJuaW5nRnJvc3QucG5nJyksCiAgICAgICAgaWNvblNpemU6IFszMiwgMzJdLAogICAgICAgIGljb25BbmNob3I6IFsxNiwgMzJdLAogICAgICAgIHBvcHVwQW5jaG9yOiBbMCwgLTIwXQogICAgICB9KSwKICAgICAgZGV2aWNlSWNvbkxpZ2h0RnJvc3Q6IEwuaWNvbih7CiAgICAgICAgaWNvblVybDogcmVxdWlyZSgnLi4vLi4vcHVibGljL3N0YXRpYy9pbWcvd2FybmluZ0xpZ2h0RnJvc3QucG5nJyksCiAgICAgICAgaWNvblNpemU6IFszMiwgMzJdLAogICAgICAgIGljb25BbmNob3I6IFsxNiwgMzJdLAogICAgICAgIHBvcHVwQW5jaG9yOiBbMCwgLTIwXQogICAgICB9KSwKICAgICAgZGV2aWNlSWNvblNub3c6IEwuaWNvbih7CiAgICAgICAgaWNvblVybDogcmVxdWlyZSgnLi4vLi4vcHVibGljL3N0YXRpYy9pbWcvc25vd3dhcm5pbmcucG5nJyksCiAgICAgICAgaWNvblNpemU6IFszMiwgMzJdLAogICAgICAgIGljb25BbmNob3I6IFsxNiwgMzJdLAogICAgICAgIHBvcHVwQW5jaG9yOiBbMCwgLTIwXQogICAgICB9KSwKICAgICAgZGV2aWNlSWNvbkZyb3N0QW5kU25vdzogTC5pY29uKHsKICAgICAgICBpY29uVXJsOiByZXF1aXJlKCcuLi9hc3NldHMvZnJvc3RBbmRTbm93Umlzay5wbmcnKSwKICAgICAgICBpY29uU2l6ZTogWzY0LCAzMl0sCiAgICAgICAgaWNvbkFuY2hvcjogWzE2LCAzMl0sCiAgICAgICAgcG9wdXBBbmNob3I6IFswLCAtMjBdCiAgICAgIH0pLAogICAgICBkZXZpY2VJY29uTGlnaHRGcm9zdEFuZFNub3c6IEwuaWNvbih7CiAgICAgICAgaWNvblVybDogcmVxdWlyZSgnLi4vYXNzZXRzL2xpZ2h0RnJvc3RBbmRTbm93Umlzay5wbmcnKSwKICAgICAgICBpY29uU2l6ZTogWzY0LCAzMl0sCiAgICAgICAgaWNvbkFuY2hvcjogWzE2LCAzMl0sCiAgICAgICAgcG9wdXBBbmNob3I6IFswLCAtMjBdCiAgICAgIH0pLAogICAgICBkZXZpY2VJY29uOiBMLmljb24oewogICAgICAgIGljb25Vcmw6IHJlcXVpcmUoJy4uLy4uL3B1YmxpYy9zdGF0aWMvaW1nL2dwcy5wbmcnKSwKICAgICAgICBpY29uU2l6ZTogWzMyLCAzMl0sCiAgICAgICAgaWNvbkFuY2hvcjogWzE2LCAzMl0sCiAgICAgICAgcG9wdXBBbmNob3I6IFswLCAtMjBdCiAgICAgIH0pLAogICAgICBzZXJpZXNfY2hhcnQ6IFt7CiAgICAgICAgZGF0YTogW10KICAgICAgfV0sCiAgICAgIGFycm93OiByZXF1aXJlKCcuLi9hc3NldHMvc3ZnL2xlZnRfYXJyb3cuc3ZnJyksCiAgICAgIHNob3dTdGF0dXM6IGZhbHNlLAogICAgICB0aW1lcjogbnVsbCwKICAgICAgdGltZXJJc1J1bm5pbmc6IGZhbHNlLAogICAgICBzZWNvbmRzOiAzMCwKICAgICAgbWF4Wm9vbTogMTAsCiAgICAgIHpvb206IDEyLjUsCiAgICAgIGJvdW5kczogbnVsbCwKICAgICAgbWFya2VyczogW1s0Ni4wOTY3MTU3NTIwNDc1OTQsIDcuMjE0MDQ1MjI2NTczOTQ1XSwgWzQ2LjA5MzU2MTE3MDY1NDMwNCwgNy4yMTIzMDcxNTUxMzIyOTVdXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSwKICBtZXRob2RzOiB7CiAgICB6b29tVXBkYXRlZDogZnVuY3Rpb24gem9vbVVwZGF0ZWQoem9vbSkgewogICAgICB0aGlzLnpvb20gPSB6b29tOwogICAgfSwKICAgIGNlbnRlclVwZGF0ZWQ6IGZ1bmN0aW9uIGNlbnRlclVwZGF0ZWQoY2VudGVyKSB7fSwKICAgIGJvdW5kc1VwZGF0ZWQ6IGZ1bmN0aW9uIGJvdW5kc1VwZGF0ZWQoYm91bmRzKSB7CiAgICAgIHRoaXMuYm91bmRzID0gYm91bmRzOwogICAgfSwKICAgIHByaW50UG9zaXRpb246IGZ1bmN0aW9uIHByaW50UG9zaXRpb24oZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coZXZlbnQubGF0bG5nKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["MapSensor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <b-overlay rounded=\"sm\" :opacity=\"0.75\" variant='light'>\n\n    <b-card>\n      <h4 class=\"card-title\">Emplacements mesur√©s &nbsp; &nbsp;\n        <!-- Nice CSS animation for information circle -->\n        <i\n          v-bind:class=\"[hovered ? 'fa fa-info-circle text-muted animate__animated animate__rubberBand' : 'fa fa-info-circle text-muted']\"\n          v-on:mouseover=\"hovered=true\" v-on:mouseout=\"hovered=false\" @click=\"info = !info\">\n        </i>\n      </h4>\n\n      <br>\n      <l-map\n        target=\"themap\"\n        style=\"min-height: 500px; width: 100%\"\n        :zoom=\"zoom\"\n        :center=\"center\"\n        @update:zoom=\"zoomUpdated\"\n        @update:center=\"centerUpdated\"\n        @update:bounds=\"boundsUpdated\"\n        @click=\"printPosition\"\n\n        class=\"leaflet-control-layers-list\">\n        <l-control-layers ref=\"control\"/>\n        <l-tile-layer\n          v-for=\"tileProvider in tileProviders\"\n          :key=\"tileProvider.name\"\n          :name=\"tileProvider.name\"\n          :visible=\"tileProvider.visible\"\n          :url=\"tileProvider.url\"\n          :attribution=\"tileProvider.attribution\"\n          layer-type=\"base\"/>\n        <l-layer-group\n          layer-type=\"overlay\"\n          name=\"Capteurs\"\n          :visible=\"true\">\n          <div v-for=\"(sensor,index) in sensors.filter( s=>s.type === 'hei')\">\n            <div v-if=\" sensor.frostRiskValue == -1\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\" :icon=\"deviceIcon\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Risque de givre : nul</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n            <div v-else-if=\" sensor.frostRiskValue == 0\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\"\n                        :icon=\"deviceIconLightFrost\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Risque de givre : mod√©r√©</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n            <div v-else-if=\"sensor.frostRiskValue == 1\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\"\n                        :icon=\"deviceIconFrost\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Risque de givre : √©lev√©</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n      <!--      <div v-else-if=\"sensor.snow-sensor.snowOffset[0] <= 50 && sensor.frostRiskValue == 0\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\"\n                        :icon=\"deviceIconLightFrost\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Hauteur de neige : {{ ((sensor.snow-sensor.snowOffset[0])/10).toFixed(0)}}cm</h5>\n                      <h5>Risque de givre : mod√©r√©</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n            <div v-else-if=\"sensor.snow-sensor.snowOffset[0] <= 50 && sensor.frostRiskValue == 1\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\" :icon=\"deviceIconFrost\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Hauteur de neige : {{ ((sensor.snow-sensor.snowOffset[0])/10).toFixed(0)}}cm</h5>\n                      <h5>Risque de givre : √©lev√©</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n            <div v-else>\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\" :icon=\"deviceIcon\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Lieu : {{sensor.realName}}</h5>\n                      <h5>Valeur lue le : {{new Date(sensor.when).toLocaleString('fr-CH')}}</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>-->\n          </div>\n<!--special case for prodesavioz where there is no snow lovel sensor-->\n          <div v-for=\"(sensor,index) in sensors.filter( s=>s.type === 'decentlab')\">\n            <div v-if=\"sensor.frostRiskValue == 1 && sensor.where==='prodesavioz'\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\"\n                        :icon=\"deviceIconFrost\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Hauteur de neige : {{ ((sensor.snow-sensor.snowOffset[0])/10).toFixed(0)}}cm</h5>\n                      <h5>Risque de givre : √©lev√©</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n            <div v-if=\"sensor.frostRiskValue == 0 && sensor.where==='prodesavioz'\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\"\n                        :icon=\"deviceIconLightFrost\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Hauteur de neige : {{ ((sensor.snow-sensor.snowOffset[0])/10).toFixed(0)}}cm</h5>\n                      <h5>Risque de givre : √©lev√©</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n            <div v-if=\"sensor.frostRiskValue == -1 && sensor.where==='prodesavioz'\">\n              <l-marker :lat-lng=\"[sensor.lat+0.0001,sensor.lng+0.0001]\" :key=\"index + 100\" :icon=\"deviceIcon\">\n                <l-popup>\n                  <div>\n                    <div>\n                      <h5>Lieu : {{sensor.realName}}</h5>\n                      <h5>Valeur lue le : {{new Date(sensor.when).toLocaleString('fr-CH')}}</h5>\n                    </div>\n                  </div>\n                </l-popup>\n              </l-marker>\n            </div>\n          </div>\n\n        </l-layer-group>\n      </l-map>\n\n      <!-- Additional map information-->\n      <div v-if=\"info\" class=\"animate__animated animate__fadeInDown\" transition=\"zoomInOut\">\n        <b-container>\n          <b-row cols=\"1\" cols-sm=\"1\" cols-md=\"2\" cols-lg=\"2\">\n            <b-col class=\"py-1\">\n              <b-media>\n                <template #aside>\n                  <b-img src=\"static/img/gps.png\" align=\"center\" width=\"32\" height=\"32\"></b-img>\n                </template>\n                Emplacement des capteurs\n              </b-media>\n            </b-col>\n            <b-col class=\"py-1\">\n              <b-media>\n                <template #aside>\n                  <b-img src=\"static/img/warningFrost.png\" align=\"center\" width=\"32\" height=\"32\"></b-img>\n                </template>\n                Risque de givre √©lev√©\n              </b-media>\n            </b-col>\n            <b-col class=\"py-1\">\n              <b-media>\n                <template #aside>\n                  <b-img src=\"static/img/warningLightFrost.png\" align=\"center\" width=\"32\" height=\"32\"></b-img>\n                </template>\n                Risque de givre mod√©r√©\n              </b-media>\n            </b-col>\n            <b-col class=\"py-1\">\n  <!--            <b-media>\n                <template #aside>\n                  <b-img src=\"static/img/snowwarning.png\" align=\"center\" width=\"32\" height=\"32\"></b-img>\n                </template>\n                Pr√©sence de neige\n              </b-media><-->\n            </b-col>\n          </b-row>\n        </b-container>\n      </div>\n    </b-card>\n  </b-overlay>\n</div>\n</template>\n\n<script>\nimport {Card, StatsCard, Table as LTable} from \"@/components/index\";\nimport {LControlLayers, LLayerGroup, LMap, LMarker, LPopup, LTileLayer} from \"vue2-leaflet\";\nimport L from \"leaflet\";\n\nexport default {\n  name: \"Map\",\n  components: {\n    Card, StatsCard, LMap, LTileLayer, LMarker, LPopup, LControlLayers, LLayerGroup, LTable\n  },\n  props:{\n      sensors: '',\n      center: '',\n\n  },\n  data() {\n    return {\n      hovered: false,\n      info: false,\n      tileProviders: [\n        {\n          name: 'OpenTopoMap',\n          visible: false,\n          url: 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',\n          attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\n        },\n        {\n          name: 'OSM',\n          visible: true,\n          attribution:\n            '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n          url: 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n        },\n        {\n          name: 'Stadia',\n          visible: false,\n          url: 'https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png?api_key=d4378e12-a0a7-4ae4-a2ff-508d8a238448',\n          attribution:\n            '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org\">OpenMapTiles</a>, &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        },\n        {\n          name: 'OpenStreetMap',\n          visible: true,\n          attribution:\n            '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n          url: 'https://tile.osm.ch/switzerland/{z}/{x}/{y}.png',\n        },\n      ],\n      deviceIconFrost: L.icon({\n        iconUrl: require('../../public/static/img/warningFrost.png'),\n        iconSize: [32, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -20]\n      }),\n      deviceIconLightFrost: L.icon({\n        iconUrl: require('../../public/static/img/warningLightFrost.png'),\n        iconSize: [32, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -20]\n      }),\n      deviceIconSnow: L.icon({\n        iconUrl: require('../../public/static/img/snowwarning.png'),\n        iconSize: [32, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -20]\n      }),\n      deviceIconFrostAndSnow: L.icon({\n        iconUrl: require('../assets/frostAndSnowRisk.png'),\n        iconSize: [64, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -20]\n      }),\n      deviceIconLightFrostAndSnow: L.icon({\n        iconUrl: require('../assets/lightFrostAndSnowRisk.png'),\n        iconSize: [64, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -20]\n      }),\n      deviceIcon: L.icon({\n        iconUrl: require('../../public/static/img/gps.png'),\n        iconSize: [32, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -20]\n      }),\n\n      series_chart: [{                                                        //serie of the 3 sensors, used just in this page\n        data: [],\n      }],\n\n      arrow: require('../assets/svg/left_arrow.svg'),\n      showStatus: false,                                                     // right button to show antenna status\n      timer: null,\n      timerIsRunning: false,\n      seconds: 30,\n\n      // Leaflet\n      maxZoom: 10,\n      zoom: 12.5, //13.5\n      bounds: null,\n\n      markers: [\n        [46.096715752047594, 7.214045226573945],\n        [46.093561170654304, 7.212307155132295],\n      ],\n    }\n\n\n  },\n  mounted() {\n\n    },\n  methods:{\n    zoomUpdated(zoom) {\n      this.zoom = zoom;\n    },\n    centerUpdated(center) {\n  //    this.center = center;\n    },\n    boundsUpdated(bounds) {\n      this.bounds = bounds;\n    },\n    /**\n     * print position clicked with the mouse\n     */\n    printPosition(event) {\n      console.log(event.latlng);\n    },\n  }\n}\n</script>\n\n<style scoped>\n@import \"../../node_modules/leaflet/dist/leaflet.css\";\n\n</style>\n"],"sourceRoot":"src/components"}]}